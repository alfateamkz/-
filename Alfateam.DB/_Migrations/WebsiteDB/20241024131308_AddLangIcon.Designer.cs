// <auto-generated />
using System;
using Alfateam.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alfateam.DB._Migrations.WebsiteDB
{
    [DbContext(typeof(WebsiteDBContext))]
    [Migration("20241024131308_AddLangIcon")]
    partial class AddLangIcon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Alfateam2._0.Models.Abstractions.ContentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.ToTable("ContentItems");

                    b.HasDiscriminator().HasValue("ContentItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Alfateam2._0.Models.Abstractions.ProductModifierItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("PricingId")
                        .HasColumnType("int");

                    b.Property<int>("ProductModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("PricingId");

                    b.HasIndex("ProductModifierId");

                    b.ToTable("ProductModifierItems");

                    b.HasDiscriminator().HasValue("ProductModifierItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Alfateam2._0.Models.Abstractions.Promocode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsReusable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceFromId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("PriceFromId");

                    b.HasIndex("PriceToId");

                    b.ToTable("Promocodes");

                    b.HasDiscriminator().HasValue("Promocode");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Alfateam2._0.Models.ComplianceDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImgPreviewPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("KBSize")
                        .HasColumnType("bigint");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("ComplianceDocuments");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventMembers")
                        .HasColumnType("longtext");

                    b.Property<string>("EventOrganizer")
                        .HasColumnType("longtext");

                    b.Property<int>("FormatId")
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FormatId");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.EventCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("EventCategories");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.EventFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("EventFormats");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("District")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AvailableInAllCountries")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.BanInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BanBefore")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("BanInfos");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PricingMatrixItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PricingMatrixItemId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<int?>("AvailabilityId1")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("OfficialMainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserRoleModelId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoleModelId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("AvailabilityId1");

                    b.HasIndex("MainCurrencyId");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("OfficialMainLanguageId");

                    b.HasIndex("UserRoleModelId");

                    b.HasIndex("UserRoleModelId1");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.CountrySite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainCurrencyId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("CountrySites");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CountrySiteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IconPath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRightToLeft")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CountrySiteId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("LanguageEntities");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.PricingMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PricingMatrices");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.PricingMatrixItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PricingMatrixId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("PricingMatrixId");

                    b.ToTable("PricingMatrixItems");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.RateVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SetAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SetByFingerprint")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SetById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("SetById");

                    b.ToTable("RateVotes");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeactivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SessID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.TimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Offset")
                        .HasColumnType("time(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("TimeZones");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarPath")
                        .HasColumnType("longtext");

                    b.Property<int?>("BanInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("BasketId")
                        .HasColumnType("int");

                    b.Property<int?>("BindedCRMUser")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Patronymic")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<int?>("RegisteredFromCountryId")
                        .HasColumnType("int");

                    b.Property<int>("RoleModelId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BanInfoId");

                    b.HasIndex("BasketId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegisteredFromCountryId");

                    b.HasIndex("RoleModelId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Watch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("JobVacancyId")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("WatchedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WatchedByFingerprint")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("WatchedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobVacancyId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("PostId");

                    b.HasIndex("WatchedById");

                    b.ToTable("Watches");
                });

            modelBuilder.Entity("Alfateam2._0.Models.HR.JobSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutInfo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVPath")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedByFingerprint")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("JobVacancyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("JobVacancyId");

                    b.ToTable("JobSummaries");
                });

            modelBuilder.Entity("Alfateam2._0.Models.HR.JobVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ExpierenceId")
                        .HasColumnType("int");

                    b.Property<int>("InnerContentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<double?>("SalaryFrom")
                        .HasColumnType("double");

                    b.Property<double?>("SalaryTo")
                        .HasColumnType("double");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Watches")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ExpierenceId");

                    b.HasIndex("InnerContentId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("JobVacancies");
                });

            modelBuilder.Entity("Alfateam2._0.Models.HR.JobVacancyExpierence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("YearsFrom")
                        .HasColumnType("int");

                    b.Property<int?>("YearsTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JobVacancyExpierences");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.CountryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CountryLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.CurrencyLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CurrencyLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.LanguageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageMainModelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("LanguageMainModelId");

                    b.ToTable("LanguageLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.TimezoneLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("TimezoneLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.ComplianceDocumentLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplianceDocumentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImgPreviewPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("KBSize")
                        .HasColumnType("bigint");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceDocumentId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ComplianceDocumentLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Events.EventCategoryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("EventCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventCategoryId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("EventCategoryLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Events.EventFormatLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EventFormatId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventFormatId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("EventFormatLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Events.EventLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("EventMembers")
                        .HasColumnType("longtext");

                    b.Property<string>("EventOrganizer")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("EventLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.HR.JobVacancyLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InnerContentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("JobVacancyId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("InnerContentId");

                    b.HasIndex("JobVacancyId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("JobVacancyLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.MassMediaPostLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("MassMediaPostId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("MassMediaPostId");

                    b.ToTable("MassMediaPostLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.PartnerLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PartnerId");

                    b.ToTable("PartnerLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Portfolios.PortfolioCategoryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PortfolioCategoryId");

                    b.ToTable("PortfolioCategoryLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Portfolios.PortfolioIndustryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioIndustryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PortfolioIndustryId");

                    b.ToTable("PortfolioIndustryLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Portfolios.PortfolioLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Posts.PostCategoryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PostCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PostCategoryId");

                    b.ToTable("PostCategoryLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Posts.PostIndustryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PostIndustryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PostIndustryId");

                    b.ToTable("PostIndustryLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Posts.PostLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PostId");

                    b.ToTable("PostLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.ServicePageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Block2Col1HTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Block2Col2HTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ServicePageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("ServicePageId");

                    b.ToTable("ServicePageLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.Modifiers.ProductModifierItemLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("ProductModifierItemId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("ProductModifierItemId");

                    b.ToTable("ProductModifierItemLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.Modifiers.ProductModifierLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("ProductModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("ProductModifierId");

                    b.ToTable("ProductModifierLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.ShopProductCategoryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("ShopProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("ShopProductCategoryId");

                    b.ToTable("ShopProductCategoryLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.ShopProductLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("MainImageId")
                        .HasColumnType("int");

                    b.Property<int>("ShopProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("UseLocalizationImages")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("MainImageId");

                    b.HasIndex("ShopProductId");

                    b.ToTable("ShopProductLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Team.TeamGroupLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TeamGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("TeamGroupId");

                    b.ToTable("TeamGroupLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Team.TeamMemberLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVFilepath")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DetailContentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortExpierence")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DetailContentId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("TeamMemberId");

                    b.ToTable("TeamMemberLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Outstaff.OutstaffColumnLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("OutstaffColumnId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("OutstaffColumnId");

                    b.ToTable("OutstaffColumnLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Outstaff.OutstaffItemGradeLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("OutstaffItemGradeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("OutstaffItemGradeId");

                    b.ToTable("OutstaffItemGradeLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Outstaff.OutstaffItemLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("OutstaffItemId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("OutstaffItemId");

                    b.ToTable("OutstaffItemLocalizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthCodeSentPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnGoBack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCAuthCodeSentPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthRestorePageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnGoBack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnGoLogin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnRestore")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCAuthRestorePageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthSignInPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnAuth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnForgotPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnGoBack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCAuthSignInPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthSignUpPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnGoBack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnIHaveAccount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnRegister")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("NameFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepeatPasswordFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepeatPasswordFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCAuthSignUpPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCInfoPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormBtnChangePwd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormErrorComplexity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormErrorDontMatch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormErrorInvalidPwd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormErrorValidation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormNewPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormNewTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormOldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormOldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormRepeatPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChangePasswordFormRepeatTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FormBtnSave")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormInputName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormInputNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormInputPatronymic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormInputPatronymicPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormInputSurname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormInputSurnamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderChangePassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderPersonalData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCInfoPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCMyOrdersPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("StatusCanceled")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StatusDeliveredAt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StatusWillDeliveredAt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCMyOrdersPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCMyProjectsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrderDeadline")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StatusCompleted")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StatusInProgress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCMyProjectsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCNotificationsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("NoNotificationsTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCNotificationsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCOrderPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnTrackOrder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryPrice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemPriceAmount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ItemPriceForOne")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ItemPriceTotal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("OrderTotalPrice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TotalItemsPrice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCOrderPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCProjectPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlreadyPaidSum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MilestoneStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MilestoneStatusCompleted")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MilestoneStatusInProgress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MilestoneStatusInWaiting")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Milestones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectInfo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectTotalCost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SumRemainder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCProjectPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefAccountPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionAdmission")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionWithdrawalIndividual")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionWithdrawalLegalEntity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCRefAccountPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefMainPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnMyAccounts")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnWithdraw")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("MyRefLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefTableHeaderActions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefTableHeaderLogin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefTableHeaderName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefTableHeaderOrdersCount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RulesText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCRefMainPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefMyAccountsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvailableToWithdraw")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCRefMyAccountsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefWithdrawalPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AccountTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ErrorInsufficientMoney")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ErrorNotAvailableMoney")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentInfoIndividualCardNumberPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoIndividualCardNumberTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalAccountNumberPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalAccountNumberTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalCompanyNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalCompanyNameTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalCountryPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalCountryTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalRegNumberPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalRegNumberTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalSWIFTPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentInfoLegalSWIFTTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SumPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SumTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TabForIndividuals")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TabForLegalEntities")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCRefWithdrawalPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.ClientCabinetCommonTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Favorites")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logout")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MyOrders")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MyProjects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notifications")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReferralProgram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ClientCabinetCommonTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.FooterTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutUs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AllRightReserved")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LeaveRequest")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("News")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurWorks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Partners")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ServicesCost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("FooterTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.HeaderTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Main")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("More")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurWorks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Services")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WorkForUs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WriteUs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("HeaderTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.LinksLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FacebookLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InstagramLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("TelegramLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TwitterLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VkontakteLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("LinksLocalization");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ComplianceTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ComplianceTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.EventTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookingFormBtnSend")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormError")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormInputDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormInputDescriptionPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormInputName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormInputNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormInputPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingFormInputPhonePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventsSearch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SearchBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("EventTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCAuthLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CCAuthCodeSentPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCAuthRestorePageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCAuthSignInPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCAuthSignUpPageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CCAuthCodeSentPageTextsId");

                    b.HasIndex("CCAuthRestorePageTextsId");

                    b.HasIndex("CCAuthSignInPageTextsId");

                    b.HasIndex("CCAuthSignUpPageTextsId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCAuthLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCRefLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CCRefAccountPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCRefMainPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCRefMyAccountsPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCRefWithdrawalPageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CCRefAccountPageTextsId");

                    b.HasIndex("CCRefMainPageTextsId");

                    b.HasIndex("CCRefMyAccountsPageTextsId");

                    b.HasIndex("CCRefWithdrawalPageTextsId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CCRefLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCWebsiteLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CCAuthLocalizationTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCInfoPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCMyOrdersPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCMyProjectsPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCNotificationsPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCOrderPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCProjectPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CCRefLocalizationTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CCAuthLocalizationTextsId");

                    b.HasIndex("CCInfoPageTextsId");

                    b.HasIndex("CCMyOrdersPageTextsId");

                    b.HasIndex("CCMyProjectsPageTextsId");

                    b.HasIndex("CCNotificationsPageTextsId");

                    b.HasIndex("CCOrderPageTextsId");

                    b.HasIndex("CCProjectPageTextsId");

                    b.HasIndex("CCRefLocalizationTextsId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("CCWebsiteLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.CommonTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientCabinetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FooterId")
                        .HasColumnType("int");

                    b.Property<int>("HeaderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.Property<string>("MainBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MoreBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PlaceholderAll")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientCabinetId");

                    b.HasIndex("FooterId");

                    b.HasIndex("HeaderId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("LinksId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("CommonTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.HRLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HRJobVacanciesListPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("HRJobVacancyPageTextId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HRJobVacanciesListPageTextsId");

                    b.HasIndex("HRJobVacancyPageTextId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("HRLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.InvestLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InvestProjectPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("InvestProjectsListPageTextsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvestProjectPageTextsId");

                    b.HasIndex("InvestProjectsListPageTextsId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("InvestLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.PortfolioLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioItemPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioListPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioStatsPageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PortfolioItemPageTextsId");

                    b.HasIndex("PortfolioListPageTextsId");

                    b.HasIndex("PortfolioStatsPageTextsId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("PortfolioLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ShopLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("ShopBasketPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopDeliveryAddressPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopItemPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopItemsPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopOrderNotPaidPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopOrderPaidSuccessfullyPageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("ShopBasketPageTextsId");

                    b.HasIndex("ShopDeliveryAddressPageTextsId");

                    b.HasIndex("ShopItemPageTextsId");

                    b.HasIndex("ShopItemsPageTextsId");

                    b.HasIndex("ShopOrderNotPaidPageTextsId");

                    b.HasIndex("ShopOrderPaidSuccessfullyPageTextsId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("ShopLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.StaticPages.InnerLandingsLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ILQualityAndPipelinePageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ILRefProgramPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ILWorkWithUsPageTextsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ILQualityAndPipelinePageTextsId");

                    b.HasIndex("ILRefProgramPageTextsId");

                    b.HasIndex("ILWorkWithUsPageTextsId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("InnerLandingsLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.StaticPages.StaticPagesLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AboutUsPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("CorporateCulturePageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FindMyAgreementPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("FraudCounteractionPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("InnerLandingsLocalizationTextsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LandingTextsId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PrivacyPolicyPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ServicesListPageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AboutUsPageTextsId");

                    b.HasIndex("CorporateCulturePageTextsId");

                    b.HasIndex("FindMyAgreementPageTextsId");

                    b.HasIndex("FraudCounteractionPageTextsId");

                    b.HasIndex("InnerLandingsLocalizationTextsId");

                    b.HasIndex("LandingTextsId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("PrivacyPolicyPageTextsId");

                    b.HasIndex("ServicesListPageTextsId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("StaticPagesLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.TeamLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TeamMemberPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("TeamPageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WebsiteLocalizationTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("TeamMemberPageTextsId");

                    b.HasIndex("TeamPageTextsId");

                    b.HasIndex("WebsiteLocalizationTextsId")
                        .IsUnique();

                    b.ToTable("TeamLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplianceTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EventTextsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<int>("MassMediaAboutUsTextsId")
                        .HasColumnType("int");

                    b.Property<int>("OutstaffPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("PartnersPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("PostsPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewsPageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("ServicePageTextsId")
                        .HasColumnType("int");

                    b.Property<int>("SitemapPageTextsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceTextsId");

                    b.HasIndex("EventTextsId");

                    b.HasIndex("LanguageEntityId");

                    b.HasIndex("MassMediaAboutUsTextsId");

                    b.HasIndex("OutstaffPageTextsId");

                    b.HasIndex("PartnersPageTextsId");

                    b.HasIndex("PostsPageTextsId");

                    b.HasIndex("ReviewsPageTextsId");

                    b.HasIndex("ServicePageTextsId");

                    b.HasIndex("SitemapPageTextsId");

                    b.ToTable("WebsiteLocalizationTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.HR.HRJobVacanciesListPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExpierenceFrom0To1Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExpierenceFrom1Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExpierenceFromPlural")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExpierenceFromToPlural")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExpierenceNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExpierenceTo1Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExpierenceToPlural")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilterNameEducation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilterNameIncomeLevel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilterNameWorkTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FindJobBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NowWatching2_3_4_AmountText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NowWatchingAmountText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SearchVacancyPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SendRequest")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("HRJobVacanciesListPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.HR.HRJobVacancyPageText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVFormBtnAttach")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormBtnSend")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormError")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormInputDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormInputDescriptionPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormInputName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormInputNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormInputPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormInputPhonePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CVFormTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KeySkills")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("HRJobVacancyPageText");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Invest.InvestProjectPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GetProjectPresentationBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("OtherInvestProjectsHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("InvestProjectPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Invest.InvestProjectsListPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactWithUsFormErrorPhoneValidation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormErrorValidation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormInputNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormInputNameTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormInputPhonePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormInputPhoneTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormInputTextPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormInputTextTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormSendBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWithUsFormSuccess")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InvestProjectsHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockColumn1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockColumn2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockColumn3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricCompanyEmployeesCount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricCompanyProductsCount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricCountriesCount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricOfficesCount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricProjectsCount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricYearsOfWork")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurInvestorsReviewsHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurPartnersHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrinciplesOfWorkHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrinciplesOfWork_Header1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrinciplesOfWork_Header2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrinciplesOfWork_Header3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrinciplesOfWork_Text1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrinciplesOfWork_Text2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrinciplesOfWork_Text3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("InvestProjectsListPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.MassMediaAboutUsTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnotherNews")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("MassMediaAboutUsTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.OutstaffPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvantagesBlockText1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AdvantagesBlockText2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AdvantagesBlockText3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AdvantagesBlockText4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AdvantagesBlockTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnFillBrief")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnLeaveRequest")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DevelopmentTypesBlockHtmlContent1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DevelopmentTypesBlockHtmlContent2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DevelopmentTypesBlockTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HowOutstaffWorksBlockHtmlContent1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HowOutstaffWorksBlockHtmlContent2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HowOutstaffWorksBlockTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReportsBlockHtmlContent1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReportsBlockHtmlContent2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReportsBlockTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortTextAfterHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("OutstaffPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.PartnersPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnShowReview")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("PartnersPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioItemPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectPeculiarities")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectStack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("PortfolioItemPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioListPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Directions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderChrono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Industries")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastBreadcrumpChrono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SearchBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SearchPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SearchTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("PortfolioListPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioStatsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FilterBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilterMonthPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilterMonthTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilterYearPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilterYearTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("PortfolioStatsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.PostsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnotherNews")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Directions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Industries")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Search")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SearchBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SearchTextBoxPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("PostsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ReviewsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormBtnSend")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormDescriptionPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormDescriptionTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormNameTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormProjectLinkPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormProjectLinkTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormTitlePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormTitleTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewFormYourRate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("YourReview")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YourReviewBtnDelete")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YourReviewBtnEdit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YourReviewBtnSaveChanges")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YourReviewDeleteConfirmation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YourReviewDeleteConfirmationNot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YourReviewDeleteConfirmationYes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ReviewsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ServicePageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("MakeAnyProject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaybeBeInteresting")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurProject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurStack")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReviewsAboutService")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WriteUsBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ServicePageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopBasketPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnClearBasket")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnMakeOrder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClearBasketConfirmation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClearBasketConfirmationNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClearBasketConfirmationYes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryPrice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeliverySetAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmptyBasketText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemPriceAmount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ItemPriceForOne")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ItemPriceTotal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrderTotalPrice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PromocodeFieldPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PromocodeFieldTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TotalItemsPrice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ShopBasketPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopDeliveryAddressPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressFormInputAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputAddressPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputCityPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputCountryPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputPatronymic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputPatronymicPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputPhonePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputSurname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputSurnamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputZIP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressFormInputZIPPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ShopDeliveryAddressPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopItemPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccordionAdditionalInfo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AccordionAdditionalInfoTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnAddToBasket")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ShopItemPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopItemsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnSort")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PriceSortAsc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PriceSortDesc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PriceSortTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ShopItemsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopOrderNotPaidPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ErrorBankDeclined")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ErrorInsufficientMoney")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ErrorInvalidCVV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ErrorInvalidOther")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ErrorOther")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ShopOrderNotPaidPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopOrderPaidSuccessfullyPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ShopOrderPaidSuccessfullyPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.SitemapPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("SitemapPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.AboutUsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Block1Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Block1Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Block2HTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Block3HTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock5")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock6")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurHistoryHtmlBlock1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurHistoryHtmlBlock2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurHistoryHtmlBlock3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("AboutUsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.CorporateCulturePageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("CorporateCulturePageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.FindMyAgreementPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgreementCustomerNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementCustomerNameTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementInfoHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementNotFound")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementNumberPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementNumberTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementResultDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementResultNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementResultSum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AgreementResultTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnDownloadDOCX")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnDownloadPDF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BtnFindAgreement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("FindMyAgreementPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.FraudCounteractionPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("FraudCounteractionPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILQualityAndPipelinePageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientsReviewsHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastProjectsHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockGoToProjectBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricProjectsInWork")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricProjectsInYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricProjectsTotal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetricTeammatesCount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock5")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurAdvantagesHtmlBlock6")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurServicesHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage5")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStagesHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ILQualityAndPipelinePageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILRefProgramPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockBtnLeaveRequest")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockColumn1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockColumn2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockColumn3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentProcedureHTMLBlock1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentProcedureHTMLBlock2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentProcedureHTMLBlock3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentProcedureHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReasonsBlockCRMHTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReasonsBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReasonsBlockPaymentsHTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReasonsBlockReliabilityHTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReasonsBlockStratigiesHTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WeProposeBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WeProposeBlock_HTMLContentForBusiness")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WeProposeBlock_HTMLContentForFreelancer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WhichServicesYouCanProposeHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStartWithUs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStartWithUsScale1Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStartWithUsScale1Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStartWithUsScale2Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStartWithUsScale2Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStartWithUsScale3Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStartWithUsScale3Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ILRefProgramPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILWorkWithUsPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlreadyJoinedUsHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AvailableVacanciesHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LiveInOurCompanyHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockWantToTeamBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurPhilosophyBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurPhilosophyBlockHtmlColumn1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurPhilosophyBlockHtmlColumn2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurPhilosophyBlockHtmlColumn3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WorkInAlfateamBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkInAlfateamBlockLargeText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkInAlfateamBlockLowerText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ILWorkWithUsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.LandingTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactMeFormErrorPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormErrorValidation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormInputNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormInputNameTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormInputPhonePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormInputPhoneTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormInputTextPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormInputTextTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactMeFormSendBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockStartProjectBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockEmails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockOurAddresses")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockOurEmails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockOurPhones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockPhones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurContactsBlockTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurProjectsBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurProjectsBlockMoreBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurProjectsBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStage5")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStagesHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectDevelopmentStagesShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("LandingTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.PrivacyPolicyPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("PrivacyPolicyPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.ServicesListPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("ServicesListPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Team.TeamMemberPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutMember")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MemberPortfolio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MemberSkills")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Project2_3_4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectPlural")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectSingle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectZero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("TeamMemberPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Team.TeamPageTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageEntityId")
                        .HasColumnType("int");

                    b.Property<string>("LastBreadcrump")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("LanguageEntityId");

                    b.ToTable("TeamPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.MassMediaPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<int>("ClicksCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("MassMediaPosts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Discount")
                        .HasColumnType("double");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("OutstaffMatrixId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("OutstaffMatrixId");

                    b.ToTable("OutstaffColumns");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("OutstaffMatrixId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("OutstaffMatrixId");

                    b.ToTable("OutstaffItems");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItemGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("OutstaffItemId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("OutstaffItemId");

                    b.ToTable("OutstaffItemGrades");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItemGradeColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnId")
                        .HasColumnType("int");

                    b.Property<int>("CostPerHourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OutstaffItemGradeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("CostPerHourId");

                    b.HasIndex("OutstaffItemGradeId");

                    b.ToTable("OutstaffItemGradeColumns");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("OutstaffMatrices");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("ContentId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Watches")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ContentId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.PortfolioCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("PortfolioCategories");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.PortfolioIndustry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("PortfolioIndustries");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Watches")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ContentId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.PostCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("PostCategories");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.PostIndustry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("PostIndustries");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Promocodes.UsedPromocode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PromocodeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PromocodeId");

                    b.HasIndex("UserId");

                    b.ToTable("UsedPromocodes");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Reviews.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("URLToProject")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.Access.ContentAccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserRoleModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleModelId");

                    b.ToTable("ContentAccessModels");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.Access.HRAccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("HRAccessModels");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.Access.OutstaffAccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("OutstaffAccessModels");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.Access.ReviewsAccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ReviewsAccessModels");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.Access.ShopAccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ShopAccessModels");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.UserRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HRAccessId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllCountriesAccess")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OutstaffAccessId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewsAccessId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("ShopAccessId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("HRAccessId");

                    b.HasIndex("OutstaffAccessId");

                    b.HasIndex("ReviewsAccessId");

                    b.HasIndex("ShopAccessId");

                    b.ToTable("UserRoleModels");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<string>("Block2Col1HTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Block2Col2HTMLContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MainBlockHeader")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainBlockShortText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("ServicePages");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePageFakeReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerAvatarPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPosition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ServicePageId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicePageLocalizationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ServicePageId");

                    b.HasIndex("ServicePageLocalizationId");

                    b.ToTable("ServicePageFakeReviews");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePageServiceRibbonItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ServicePageId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicePageLocalizationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ServicePageId");

                    b.HasIndex("ServicePageLocalizationId");

                    b.ToTable("ServicePageServiceRibbonItems");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePageStackIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ServicePageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ServicePageId");

                    b.ToTable("ServicePageStackIcons");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Modifiers.ProductModifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowMultipleSelection")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("ShopProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("ShopProductId");

                    b.ToTable("ProductModifiers");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double?>("DiscountByPromocode")
                        .HasColumnType("double");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrackingURL")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UsedPromocodeId")
                        .HasColumnType("int");

                    b.Property<int?>("UsedPromocodeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ReturnId");

                    b.HasIndex("UsedPromocodeId");

                    b.ToTable("ShopOrders");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<double>("PriceForOne")
                        .HasColumnType("double");

                    b.Property<int>("ShopOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ShopOrderId");

                    b.ToTable("ShopOrderItems");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItemModifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("ShopOrderItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ModifierId");

                    b.HasIndex("ShopOrderItemId");

                    b.ToTable("ShopOrderItemModifiers");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItemModifierOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<double>("PriceForOne")
                        .HasColumnType("double");

                    b.Property<int?>("ShopOrderItemModifierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("ShopOrderItemModifierId");

                    b.ToTable("ShopOrderItemModifierOptions");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("InitiatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MerchantService")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ShopOrderId")
                        .HasColumnType("int");

                    b.Property<double>("Sum")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ShopOrderId");

                    b.ToTable("ShopOrderPayments");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReturnedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ShopOrderReturns");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<int>("BasePricingId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainImageId")
                        .HasColumnType("int");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("BasePricingId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MainImageId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("ShopProducts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("ShopProductCategories");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ShopProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ShopProductLocalizationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ShopProductId");

                    b.HasIndex("ShopProductLocalizationId");

                    b.ToTable("ShopProductImages");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Wishes.ShopWishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ShopWishlists");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Wishes.ShopWishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ShopWishlistId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopWishlistId");

                    b.ToTable("ShopWishlistItems");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Stats.SiteVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Fingerprint")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IP")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("VisitedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("VisitedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("VisitedById");

                    b.ToTable("SiteVisits");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("TeamStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("TeamStructureId");

                    b.ToTable("TeamGroups");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVFilepath")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DetailContentId")
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortExpierence")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TeamGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DetailContentId");

                    b.HasIndex("MainLanguageId");

                    b.HasIndex("TeamGroupId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainLanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("MainLanguageId");

                    b.ToTable("TeamStructures");
                });

            modelBuilder.Entity("CountryCurrency", b =>
                {
                    b.Property<int>("CountryManyToManyRefsId")
                        .HasColumnType("int");

                    b.Property<int>("CurrenciesId")
                        .HasColumnType("int");

                    b.HasKey("CountryManyToManyRefsId", "CurrenciesId");

                    b.HasIndex("CurrenciesId");

                    b.ToTable("CountryCurrency");
                });

            modelBuilder.Entity("CountryLanguage", b =>
                {
                    b.Property<int>("CountryManyToManyRefsId")
                        .HasColumnType("int");

                    b.Property<int>("LanguagesId")
                        .HasColumnType("int");

                    b.HasKey("CountryManyToManyRefsId", "LanguagesId");

                    b.HasIndex("LanguagesId");

                    b.ToTable("CountryLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.AudioContentItem", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.ContentItem");

                    b.Property<string>("AudioPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("AudioContentItem");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.ImageContentItem", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.ContentItem");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("ImageSliderContentItemId")
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasIndex("ImageSliderContentItemId");

                    b.ToTable("ContentItems", t =>
                        {
                            t.Property("Description")
                                .HasColumnName("ImageContentItem_Description");

                            t.Property("Title")
                                .HasColumnName("ImageContentItem_Title");
                        });

                    b.HasDiscriminator().HasValue("ImageContentItem");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.ImageSliderContentItem", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.ContentItem");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.ToTable("ContentItems", t =>
                        {
                            t.Property("Description")
                                .HasColumnName("ImageSliderContentItem_Description");

                            t.Property("Title")
                                .HasColumnName("ImageSliderContentItem_Title");
                        });

                    b.HasDiscriminator().HasValue("ImageSliderContentItem");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.TextContentItem", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.ContentItem");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("TextContentItem");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.VideoContentItem", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.ContentItem");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("ContentItems", t =>
                        {
                            t.Property("Description")
                                .HasColumnName("VideoContentItem_Description");

                            t.Property("Title")
                                .HasColumnName("VideoContentItem_Title");
                        });

                    b.HasDiscriminator().HasValue("VideoContentItem");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Modifiers.Items.ColorModifierItem", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.ProductModifierItem");

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("ColorModifierItem");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Modifiers.Items.SimpleModifierItem", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.ProductModifierItem");

                    b.HasDiscriminator().HasValue("SimpleModifierItem");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Promocodes.PercentPromocode", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.Promocode");

                    b.Property<double>("Percent")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("PercentPromocode");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Promocodes.PricePromocode", b =>
                {
                    b.HasBaseType("Alfateam2._0.Models.Abstractions.Promocode");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.HasIndex("DiscountId");

                    b.HasDiscriminator().HasValue("PricePromocode");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Abstractions.ContentItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", null)
                        .WithMany("Items")
                        .HasForeignKey("ContentId");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Abstractions.ProductModifierItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.PricingMatrix", "Pricing")
                        .WithMany()
                        .HasForeignKey("PricingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.Modifiers.ProductModifier", null)
                        .WithMany("Options")
                        .HasForeignKey("ProductModifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");

                    b.Navigation("Pricing");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Abstractions.Promocode", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.PricingMatrix", "PriceFrom")
                        .WithMany()
                        .HasForeignKey("PriceFromId");

                    b.HasOne("Alfateam2._0.Models.General.PricingMatrix", "PriceTo")
                        .WithMany()
                        .HasForeignKey("PriceToId");

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");

                    b.Navigation("PriceFrom");

                    b.Navigation("PriceTo");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ComplianceDocument", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.Event", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Events.EventCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Events.EventFormat", "Format")
                        .WithMany()
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.TimeZone", "TimeZone")
                        .WithMany()
                        .HasForeignKey("TimeZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("Category");

                    b.Navigation("Format");

                    b.Navigation("MainLanguage");

                    b.Navigation("TimeZone");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.EventCategory", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.EventFormat", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Address", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Cost", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.PricingMatrixItem", null)
                        .WithMany("Costs")
                        .HasForeignKey("PricingMatrixItemId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Country", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", null)
                        .WithMany("AllowedCountries")
                        .HasForeignKey("AvailabilityId");

                    b.HasOne("Alfateam2._0.Models.General.Availability", null)
                        .WithMany("DisallowedCountries")
                        .HasForeignKey("AvailabilityId1");

                    b.HasOne("Alfateam2._0.Models.General.Currency", "MainCurrency")
                        .WithMany()
                        .HasForeignKey("MainCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "OfficialMainLanguage")
                        .WithMany()
                        .HasForeignKey("OfficialMainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Roles.UserRoleModel", null)
                        .WithMany("AvailableCountries")
                        .HasForeignKey("UserRoleModelId");

                    b.HasOne("Alfateam2._0.Models.Roles.UserRoleModel", null)
                        .WithMany("ForbiddenCountries")
                        .HasForeignKey("UserRoleModelId1");

                    b.Navigation("MainCurrency");

                    b.Navigation("MainLanguage");

                    b.Navigation("OfficialMainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.CountrySite", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Currency", "MainCurrency")
                        .WithMany()
                        .HasForeignKey("MainCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCurrency");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Currency", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Language", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.CountrySite", null)
                        .WithMany("Languages")
                        .HasForeignKey("CountrySiteId");

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.PricingMatrixItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Alfateam2._0.Models.General.PricingMatrix", null)
                        .WithMany("Costs")
                        .HasForeignKey("PricingMatrixId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.RateVote", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Portfolios.Portfolio", null)
                        .WithMany("LikesList")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Alfateam2._0.Models.General.User", "SetBy")
                        .WithMany()
                        .HasForeignKey("SetById");

                    b.Navigation("SetBy");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Session", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.TimeZone", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.User", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.BanInfo", "BanInfo")
                        .WithMany()
                        .HasForeignKey("BanInfoId");

                    b.HasOne("Alfateam2._0.Models.Shop.Orders.ShopOrder", "Basket")
                        .WithMany()
                        .HasForeignKey("BasketId");

                    b.HasOne("Alfateam2._0.Models.General.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Alfateam2._0.Models.General.Country", "RegisteredFromCountry")
                        .WithMany()
                        .HasForeignKey("RegisteredFromCountryId");

                    b.HasOne("Alfateam2._0.Models.Roles.UserRoleModel", "RoleModel")
                        .WithMany()
                        .HasForeignKey("RoleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BanInfo");

                    b.Navigation("Basket");

                    b.Navigation("Country");

                    b.Navigation("RegisteredFromCountry");

                    b.Navigation("RoleModel");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Watch", b =>
                {
                    b.HasOne("Alfateam2._0.Models.HR.JobVacancy", null)
                        .WithMany("WatchesList")
                        .HasForeignKey("JobVacancyId");

                    b.HasOne("Alfateam2._0.Models.Portfolios.Portfolio", null)
                        .WithMany("WatchesList")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Alfateam2._0.Models.Posts.Post", null)
                        .WithMany("WatchesList")
                        .HasForeignKey("PostId");

                    b.HasOne("Alfateam2._0.Models.General.User", "WatchedBy")
                        .WithMany()
                        .HasForeignKey("WatchedById");

                    b.Navigation("WatchedBy");
                });

            modelBuilder.Entity("Alfateam2._0.Models.HR.JobSummary", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Alfateam2._0.Models.HR.JobVacancy", null)
                        .WithMany("Summaries")
                        .HasForeignKey("JobVacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Alfateam2._0.Models.HR.JobVacancy", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.HR.JobVacancyExpierence", "Expierence")
                        .WithMany()
                        .HasForeignKey("ExpierenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "InnerContent")
                        .WithMany()
                        .HasForeignKey("InnerContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("Currency");

                    b.Navigation("Expierence");

                    b.Navigation("InnerContent");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.CountryLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Country", null)
                        .WithMany("Localizations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.CurrencyLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Currency", null)
                        .WithMany("Localizations")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.LanguageLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageMainModel")
                        .WithMany("Localizations")
                        .HasForeignKey("LanguageMainModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");

                    b.Navigation("LanguageMainModel");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.General.TimezoneLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.TimeZone", null)
                        .WithMany("Localizations")
                        .HasForeignKey("TimeZoneId");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.ComplianceDocumentLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ComplianceDocument", null)
                        .WithMany("Localizations")
                        .HasForeignKey("ComplianceDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Events.EventCategoryLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Events.EventCategory", null)
                        .WithMany("Localizations")
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Events.EventFormatLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Events.EventFormat", null)
                        .WithMany("Localizations")
                        .HasForeignKey("EventFormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Events.EventLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Events.Event", null)
                        .WithMany("Localizations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.HR.JobVacancyLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "InnerContent")
                        .WithMany()
                        .HasForeignKey("InnerContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.HR.JobVacancy", null)
                        .WithMany("Localizations")
                        .HasForeignKey("JobVacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InnerContent");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.MassMediaPostLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.MassMediaPost", null)
                        .WithMany("Localizations")
                        .HasForeignKey("MassMediaPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.PartnerLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Partner", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Portfolios.PortfolioCategoryLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Portfolios.PortfolioCategory", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PortfolioCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Portfolios.PortfolioIndustryLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Portfolios.PortfolioIndustry", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PortfolioIndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Portfolios.PortfolioLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Portfolios.Portfolio", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Posts.PostCategoryLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Posts.PostCategory", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PostCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Posts.PostIndustryLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Posts.PostIndustry", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PostIndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Posts.PostLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Posts.Post", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.ServicePageLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.ServicePages.ServicePage", null)
                        .WithMany("Localizations")
                        .HasForeignKey("ServicePageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.Modifiers.ProductModifierItemLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Abstractions.ProductModifierItem", null)
                        .WithMany("Localizations")
                        .HasForeignKey("ProductModifierItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.Modifiers.ProductModifierLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.Modifiers.ProductModifier", null)
                        .WithMany("Localizations")
                        .HasForeignKey("ProductModifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.ShopProductCategoryLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.ShopProductCategory", null)
                        .WithMany("Localizations")
                        .HasForeignKey("ShopProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.ShopProductLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.ShopProductImage", "MainImage")
                        .WithMany()
                        .HasForeignKey("MainImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.ShopProduct", null)
                        .WithMany("Localizations")
                        .HasForeignKey("ShopProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");

                    b.Navigation("MainImage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Team.TeamGroupLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Team.TeamGroup", null)
                        .WithMany("Localizations")
                        .HasForeignKey("TeamGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Team.TeamMemberLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "DetailContent")
                        .WithMany()
                        .HasForeignKey("DetailContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Team.TeamMember", null)
                        .WithMany("Localizations")
                        .HasForeignKey("TeamMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailContent");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Outstaff.OutstaffColumnLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffColumn", null)
                        .WithMany("Localizations")
                        .HasForeignKey("OutstaffColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Outstaff.OutstaffItemGradeLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffItemGrade", null)
                        .WithMany("Localizations")
                        .HasForeignKey("OutstaffItemGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Outstaff.OutstaffItemLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffItem", null)
                        .WithMany("Localizations")
                        .HasForeignKey("OutstaffItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthCodeSentPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthRestorePageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthSignInPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthSignUpPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCInfoPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCMyOrdersPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCMyProjectsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCNotificationsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCOrderPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCProjectPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefAccountPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefMainPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefMyAccountsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefWithdrawalPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.ClientCabinetCommonTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.FooterTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.HeaderTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Common.LinksLocalization", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ComplianceTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.EventTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCAuthLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthCodeSentPageTexts", "CCAuthCodeSentPageTexts")
                        .WithMany()
                        .HasForeignKey("CCAuthCodeSentPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthRestorePageTexts", "CCAuthRestorePageTexts")
                        .WithMany()
                        .HasForeignKey("CCAuthRestorePageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthSignInPageTexts", "CCAuthSignInPageTexts")
                        .WithMany()
                        .HasForeignKey("CCAuthSignInPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Auth.CCAuthSignUpPageTexts", "CCAuthSignUpPageTexts")
                        .WithMany()
                        .HasForeignKey("CCAuthSignUpPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CCAuthCodeSentPageTexts");

                    b.Navigation("CCAuthRestorePageTexts");

                    b.Navigation("CCAuthSignInPageTexts");

                    b.Navigation("CCAuthSignUpPageTexts");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCRefLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefAccountPageTexts", "CCRefAccountPageTexts")
                        .WithMany()
                        .HasForeignKey("CCRefAccountPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefMainPageTexts", "CCRefMainPageTexts")
                        .WithMany()
                        .HasForeignKey("CCRefMainPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefMyAccountsPageTexts", "CCRefMyAccountsPageTexts")
                        .WithMany()
                        .HasForeignKey("CCRefMyAccountsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.Referral.CCRefWithdrawalPageTexts", "CCRefWithdrawalPageTexts")
                        .WithMany()
                        .HasForeignKey("CCRefWithdrawalPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CCRefAccountPageTexts");

                    b.Navigation("CCRefMainPageTexts");

                    b.Navigation("CCRefMyAccountsPageTexts");

                    b.Navigation("CCRefWithdrawalPageTexts");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCWebsiteLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCAuthLocalizationTexts", "CCAuthLocalizationTexts")
                        .WithMany()
                        .HasForeignKey("CCAuthLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCInfoPageTexts", "CCInfoPageTexts")
                        .WithMany()
                        .HasForeignKey("CCInfoPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCMyOrdersPageTexts", "CCMyOrdersPageTexts")
                        .WithMany()
                        .HasForeignKey("CCMyOrdersPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCMyProjectsPageTexts", "CCMyProjectsPageTexts")
                        .WithMany()
                        .HasForeignKey("CCMyProjectsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCNotificationsPageTexts", "CCNotificationsPageTexts")
                        .WithMany()
                        .HasForeignKey("CCNotificationsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCOrderPageTexts", "CCOrderPageTexts")
                        .WithMany()
                        .HasForeignKey("CCOrderPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ClientCabinet.CCProjectPageTexts", "CCProjectPageTexts")
                        .WithMany()
                        .HasForeignKey("CCProjectPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCRefLocalizationTexts", "CCRefLocalizationTexts")
                        .WithMany()
                        .HasForeignKey("CCRefLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("CCWebsiteLocalizationTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.ClientCabinet.CCWebsiteLocalizationTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CCAuthLocalizationTexts");

                    b.Navigation("CCInfoPageTexts");

                    b.Navigation("CCMyOrdersPageTexts");

                    b.Navigation("CCMyProjectsPageTexts");

                    b.Navigation("CCNotificationsPageTexts");

                    b.Navigation("CCOrderPageTexts");

                    b.Navigation("CCProjectPageTexts");

                    b.Navigation("CCRefLocalizationTexts");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.CommonTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Common.ClientCabinetCommonTexts", "ClientCabinet")
                        .WithMany()
                        .HasForeignKey("ClientCabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Common.FooterTexts", "Footer")
                        .WithMany()
                        .HasForeignKey("FooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Common.HeaderTexts", "Header")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Common.LinksLocalization", "Links")
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("CommonTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.CommonTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientCabinet");

                    b.Navigation("Footer");

                    b.Navigation("Header");

                    b.Navigation("LanguageEntity");

                    b.Navigation("Links");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.HRLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.HR.HRJobVacanciesListPageTexts", "HRJobVacanciesListPageTexts")
                        .WithMany()
                        .HasForeignKey("HRJobVacanciesListPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.HR.HRJobVacancyPageText", "HRJobVacancyPageText")
                        .WithMany()
                        .HasForeignKey("HRJobVacancyPageTextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("HRLocalizationTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.HRLocalizationTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRJobVacanciesListPageTexts");

                    b.Navigation("HRJobVacancyPageText");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.InvestLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Invest.InvestProjectPageTexts", "InvestProjectPageTexts")
                        .WithMany()
                        .HasForeignKey("InvestProjectPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Invest.InvestProjectsListPageTexts", "InvestProjectsListPageTexts")
                        .WithMany()
                        .HasForeignKey("InvestProjectsListPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("InvestLocalizationTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.InvestLocalizationTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvestProjectPageTexts");

                    b.Navigation("InvestProjectsListPageTexts");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.PortfolioLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioItemPageTexts", "PortfolioItemPageTexts")
                        .WithMany()
                        .HasForeignKey("PortfolioItemPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioListPageTexts", "PortfolioListPageTexts")
                        .WithMany()
                        .HasForeignKey("PortfolioListPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioStatsPageTexts", "PortfolioStatsPageTexts")
                        .WithMany()
                        .HasForeignKey("PortfolioStatsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("PortfolioLocalizationTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.PortfolioLocalizationTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");

                    b.Navigation("PortfolioItemPageTexts");

                    b.Navigation("PortfolioListPageTexts");

                    b.Navigation("PortfolioStatsPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.ShopLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Shop.ShopBasketPageTexts", "ShopBasketPageTexts")
                        .WithMany()
                        .HasForeignKey("ShopBasketPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Shop.ShopDeliveryAddressPageTexts", "ShopDeliveryAddressPageTexts")
                        .WithMany()
                        .HasForeignKey("ShopDeliveryAddressPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Shop.ShopItemPageTexts", "ShopItemPageTexts")
                        .WithMany()
                        .HasForeignKey("ShopItemPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Shop.ShopItemsPageTexts", "ShopItemsPageTexts")
                        .WithMany()
                        .HasForeignKey("ShopItemsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Shop.ShopOrderNotPaidPageTexts", "ShopOrderNotPaidPageTexts")
                        .WithMany()
                        .HasForeignKey("ShopOrderNotPaidPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Shop.ShopOrderPaidSuccessfullyPageTexts", "ShopOrderPaidSuccessfullyPageTexts")
                        .WithMany()
                        .HasForeignKey("ShopOrderPaidSuccessfullyPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("ShopLocalizationTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.ShopLocalizationTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");

                    b.Navigation("ShopBasketPageTexts");

                    b.Navigation("ShopDeliveryAddressPageTexts");

                    b.Navigation("ShopItemPageTexts");

                    b.Navigation("ShopItemsPageTexts");

                    b.Navigation("ShopOrderNotPaidPageTexts");

                    b.Navigation("ShopOrderPaidSuccessfullyPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.StaticPages.InnerLandingsLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILQualityAndPipelinePageTexts", "ILQualityAndPipelinePageTexts")
                        .WithMany()
                        .HasForeignKey("ILQualityAndPipelinePageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILRefProgramPageTexts", "ILRefProgramPageTexts")
                        .WithMany()
                        .HasForeignKey("ILRefProgramPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILWorkWithUsPageTexts", "ILWorkWithUsPageTexts")
                        .WithMany()
                        .HasForeignKey("ILWorkWithUsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ILQualityAndPipelinePageTexts");

                    b.Navigation("ILRefProgramPageTexts");

                    b.Navigation("ILWorkWithUsPageTexts");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.StaticPages.StaticPagesLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.AboutUsPageTexts", "AboutUsPageTexts")
                        .WithMany()
                        .HasForeignKey("AboutUsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.CorporateCulturePageTexts", "CorporateCulturePageTexts")
                        .WithMany()
                        .HasForeignKey("CorporateCulturePageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.FindMyAgreementPageTexts", "FindMyAgreementPageTexts")
                        .WithMany()
                        .HasForeignKey("FindMyAgreementPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.FraudCounteractionPageTexts", "FraudCounteractionPageTexts")
                        .WithMany()
                        .HasForeignKey("FraudCounteractionPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.StaticPages.InnerLandingsLocalizationTexts", "InnerLandingsLocalizationTexts")
                        .WithMany()
                        .HasForeignKey("InnerLandingsLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.LandingTexts", "LandingTexts")
                        .WithMany()
                        .HasForeignKey("LandingTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.PrivacyPolicyPageTexts", "PrivacyPolicyPageTexts")
                        .WithMany()
                        .HasForeignKey("PrivacyPolicyPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.StaticPages.ServicesListPageTexts", "ServicesListPageTexts")
                        .WithMany()
                        .HasForeignKey("ServicesListPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("StaticPagesLocalizationTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.StaticPages.StaticPagesLocalizationTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AboutUsPageTexts");

                    b.Navigation("CorporateCulturePageTexts");

                    b.Navigation("FindMyAgreementPageTexts");

                    b.Navigation("FraudCounteractionPageTexts");

                    b.Navigation("InnerLandingsLocalizationTexts");

                    b.Navigation("LandingTexts");

                    b.Navigation("LanguageEntity");

                    b.Navigation("PrivacyPolicyPageTexts");

                    b.Navigation("ServicesListPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.TeamLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Team.TeamMemberPageTexts", "TeamMemberPageTexts")
                        .WithMany()
                        .HasForeignKey("TeamMemberPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Team.TeamPageTexts", "TeamPageTexts")
                        .WithMany()
                        .HasForeignKey("TeamPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", null)
                        .WithOne("TeamLocalizationTexts")
                        .HasForeignKey("Alfateam2._0.Models.Localization.Texts.Grouping.TeamLocalizationTexts", "WebsiteLocalizationTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");

                    b.Navigation("TeamMemberPageTexts");

                    b.Navigation("TeamPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ComplianceTexts", "ComplianceTexts")
                        .WithMany()
                        .HasForeignKey("ComplianceTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.EventTexts", "EventTexts")
                        .WithMany()
                        .HasForeignKey("EventTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.MassMediaAboutUsTexts", "MassMediaAboutUsTexts")
                        .WithMany()
                        .HasForeignKey("MassMediaAboutUsTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.OutstaffPageTexts", "OutstaffPageTexts")
                        .WithMany()
                        .HasForeignKey("OutstaffPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.PartnersPageTexts", "PartnersPageTexts")
                        .WithMany()
                        .HasForeignKey("PartnersPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.PostsPageTexts", "PostsPageTexts")
                        .WithMany()
                        .HasForeignKey("PostsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ReviewsPageTexts", "ReviewsPageTexts")
                        .WithMany()
                        .HasForeignKey("ReviewsPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.ServicePageTexts", "ServicePageTexts")
                        .WithMany()
                        .HasForeignKey("ServicePageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Localization.Texts.SitemapPageTexts", "SitemapPageTexts")
                        .WithMany()
                        .HasForeignKey("SitemapPageTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceTexts");

                    b.Navigation("EventTexts");

                    b.Navigation("LanguageEntity");

                    b.Navigation("MassMediaAboutUsTexts");

                    b.Navigation("OutstaffPageTexts");

                    b.Navigation("PartnersPageTexts");

                    b.Navigation("PostsPageTexts");

                    b.Navigation("ReviewsPageTexts");

                    b.Navigation("ServicePageTexts");

                    b.Navigation("SitemapPageTexts");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.HR.HRJobVacanciesListPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.HR.HRJobVacancyPageText", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Invest.InvestProjectPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Invest.InvestProjectsListPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.MassMediaAboutUsTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.OutstaffPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.PartnersPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioItemPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioListPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Portfolio.PortfolioStatsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.PostsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ReviewsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.ServicePageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopBasketPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopDeliveryAddressPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopItemPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopItemsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopOrderNotPaidPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Shop.ShopOrderPaidSuccessfullyPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.SitemapPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.AboutUsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.CorporateCulturePageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.FindMyAgreementPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.FraudCounteractionPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILQualityAndPipelinePageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILRefProgramPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.InnerLandings.ILWorkWithUsPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.LandingTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.PrivacyPolicyPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.StaticPages.ServicesListPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Team.TeamMemberPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Team.TeamPageTexts", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("LanguageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("Alfateam2._0.Models.MassMediaPost", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffColumn", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffMatrix", null)
                        .WithMany("Columns")
                        .HasForeignKey("OutstaffMatrixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffMatrix", null)
                        .WithMany("Items")
                        .HasForeignKey("OutstaffMatrixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItemGrade", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffItem", null)
                        .WithMany("Grades")
                        .HasForeignKey("OutstaffItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItemGradeColumn", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffColumn", "Column")
                        .WithMany()
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.PricingMatrix", "CostPerHour")
                        .WithMany()
                        .HasForeignKey("CostPerHourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Outstaff.OutstaffItemGrade", "OutstaffItemGrade")
                        .WithMany("Prices")
                        .HasForeignKey("OutstaffItemGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");

                    b.Navigation("CostPerHour");

                    b.Navigation("OutstaffItemGrade");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Partner", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("Content");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.Portfolio", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Portfolios.PortfolioCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Portfolios.PortfolioIndustry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("Category");

                    b.Navigation("Content");

                    b.Navigation("Industry");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.PortfolioCategory", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.PortfolioIndustry", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.Post", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Posts.PostCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Posts.PostIndustry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("Category");

                    b.Navigation("Content");

                    b.Navigation("Industry");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.PostCategory", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.PostIndustry", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Promocodes.UsedPromocode", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Abstractions.Promocode", "Promocode")
                        .WithMany()
                        .HasForeignKey("PromocodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.User", null)
                        .WithMany("UsedPromocodes")
                        .HasForeignKey("UserId");

                    b.Navigation("Promocode");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Reviews.Review", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.Access.ContentAccessModel", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Roles.UserRoleModel", null)
                        .WithMany("ContentAccessTypes")
                        .HasForeignKey("UserRoleModelId");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.UserRoleModel", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Roles.Access.HRAccessModel", "HRAccess")
                        .WithMany()
                        .HasForeignKey("HRAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Roles.Access.OutstaffAccessModel", "OutstaffAccess")
                        .WithMany()
                        .HasForeignKey("OutstaffAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Roles.Access.ReviewsAccessModel", "ReviewsAccess")
                        .WithMany()
                        .HasForeignKey("ReviewsAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Roles.Access.ShopAccessModel", "ShopAccess")
                        .WithMany()
                        .HasForeignKey("ShopAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRAccess");

                    b.Navigation("OutstaffAccess");

                    b.Navigation("ReviewsAccess");

                    b.Navigation("ShopAccess");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePage", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePageFakeReview", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ServicePages.ServicePage", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ServicePageId");

                    b.HasOne("Alfateam2._0.Models.Localization.Items.ServicePageLocalization", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ServicePageLocalizationId");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePageServiceRibbonItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ServicePages.ServicePage", null)
                        .WithMany("ServiceRibbonItems")
                        .HasForeignKey("ServicePageId");

                    b.HasOne("Alfateam2._0.Models.Localization.Items.ServicePageLocalization", null)
                        .WithMany("ServiceRibbonItems")
                        .HasForeignKey("ServicePageLocalizationId");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePageStackIcon", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ServicePages.ServicePage", null)
                        .WithMany("StackIcons")
                        .HasForeignKey("ServicePageId");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Modifiers.ProductModifier", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.ShopProduct", null)
                        .WithMany("Modifiers")
                        .HasForeignKey("ShopProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrder", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Alfateam2._0.Models.General.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Alfateam2._0.Models.General.User", "CreatedBy")
                        .WithMany("Orders")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Alfateam2._0.Models.Shop.Orders.ShopOrderReturn", "Return")
                        .WithMany()
                        .HasForeignKey("ReturnId");

                    b.HasOne("Alfateam2._0.Models.Abstractions.Promocode", "UsedPromocode")
                        .WithMany()
                        .HasForeignKey("UsedPromocodeId");

                    b.Navigation("Address");

                    b.Navigation("Country");

                    b.Navigation("CreatedBy");

                    b.Navigation("Currency");

                    b.Navigation("Return");

                    b.Navigation("UsedPromocode");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Shop.ShopProduct", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.Orders.ShopOrder", null)
                        .WithMany("Items")
                        .HasForeignKey("ShopOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItemModifier", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Shop.Modifiers.ProductModifier", "Modifier")
                        .WithMany()
                        .HasForeignKey("ModifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.Orders.ShopOrderItem", null)
                        .WithMany("SelectedModifiers")
                        .HasForeignKey("ShopOrderItemId");

                    b.Navigation("Modifier");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItemModifierOption", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Abstractions.ProductModifierItem", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.Orders.ShopOrderItemModifier", null)
                        .WithMany("SelectedOptions")
                        .HasForeignKey("ShopOrderItemModifierId");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderPayment", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.Orders.ShopOrder", null)
                        .WithMany("Payments")
                        .HasForeignKey("ShopOrderId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProduct", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.PricingMatrix", "BasePricing")
                        .WithMany()
                        .HasForeignKey("BasePricingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.ShopProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.ShopProductImage", "MainImage")
                        .WithMany()
                        .HasForeignKey("MainImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("BasePricing");

                    b.Navigation("Category");

                    b.Navigation("MainImage");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProductCategory", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProductImage", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Shop.ShopProduct", null)
                        .WithMany("Images")
                        .HasForeignKey("ShopProductId");

                    b.HasOne("Alfateam2._0.Models.Localization.Items.Shop.ShopProductLocalization", null)
                        .WithMany("Images")
                        .HasForeignKey("ShopProductLocalizationId");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Wishes.ShopWishlist", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.User", "User")
                        .WithOne("Wishlist")
                        .HasForeignKey("Alfateam2._0.Models.Shop.Wishes.ShopWishlist", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Wishes.ShopWishlistItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.Shop.ShopProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Shop.Wishes.ShopWishlist", null)
                        .WithMany("Items")
                        .HasForeignKey("ShopWishlistId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Stats.SiteVisit", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Alfateam2._0.Models.General.User", "VisitedBy")
                        .WithMany()
                        .HasForeignKey("VisitedById");

                    b.Navigation("Country");

                    b.Navigation("VisitedBy");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamGroup", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Team.TeamStructure", null)
                        .WithMany("Groups")
                        .HasForeignKey("TeamStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamMember", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.Content", "DetailContent")
                        .WithMany()
                        .HasForeignKey("DetailContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.Team.TeamGroup", null)
                        .WithMany("Members")
                        .HasForeignKey("TeamGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailContent");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamStructure", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", "MainLanguage")
                        .WithMany()
                        .HasForeignKey("MainLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Availability");

                    b.Navigation("MainLanguage");
                });

            modelBuilder.Entity("CountryCurrency", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryManyToManyRefsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CountryLanguage", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryManyToManyRefsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam2._0.Models.General.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.ImageContentItem", b =>
                {
                    b.HasOne("Alfateam2._0.Models.ContentItems.ImageSliderContentItem", null)
                        .WithMany("Images")
                        .HasForeignKey("ImageSliderContentItemId");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Promocodes.PricePromocode", b =>
                {
                    b.HasOne("Alfateam2._0.Models.General.PricingMatrix", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Abstractions.ProductModifierItem", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ComplianceDocument", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.Content", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.Event", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.EventCategory", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Events.EventFormat", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Availability", b =>
                {
                    b.Navigation("AllowedCountries");

                    b.Navigation("DisallowedCountries");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Country", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.CountrySite", b =>
                {
                    b.Navigation("Languages");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Currency", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.Language", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.PricingMatrix", b =>
                {
                    b.Navigation("Costs");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.PricingMatrixItem", b =>
                {
                    b.Navigation("Costs");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.TimeZone", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.General.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("UsedPromocodes");

                    b.Navigation("Wishlist");
                });

            modelBuilder.Entity("Alfateam2._0.Models.HR.JobVacancy", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Summaries");

                    b.Navigation("WatchesList");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.ServicePageLocalization", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("ServiceRibbonItems");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Items.Shop.ShopProductLocalization", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Localization.Texts.Grouping.WebsiteLocalizationTexts", b =>
                {
                    b.Navigation("CCWebsiteLocalizationTexts")
                        .IsRequired();

                    b.Navigation("CommonTexts")
                        .IsRequired();

                    b.Navigation("HRLocalizationTexts")
                        .IsRequired();

                    b.Navigation("InvestLocalizationTexts")
                        .IsRequired();

                    b.Navigation("PortfolioLocalizationTexts")
                        .IsRequired();

                    b.Navigation("ShopLocalizationTexts")
                        .IsRequired();

                    b.Navigation("StaticPagesLocalizationTexts")
                        .IsRequired();

                    b.Navigation("TeamLocalizationTexts")
                        .IsRequired();
                });

            modelBuilder.Entity("Alfateam2._0.Models.MassMediaPost", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffColumn", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItem", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffItemGrade", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Outstaff.OutstaffMatrix", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Partner", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.Portfolio", b =>
                {
                    b.Navigation("LikesList");

                    b.Navigation("Localizations");

                    b.Navigation("WatchesList");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.PortfolioCategory", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Portfolios.PortfolioIndustry", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.Post", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("WatchesList");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.PostCategory", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Posts.PostIndustry", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Roles.UserRoleModel", b =>
                {
                    b.Navigation("AvailableCountries");

                    b.Navigation("ContentAccessTypes");

                    b.Navigation("ForbiddenCountries");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ServicePages.ServicePage", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Reviews");

                    b.Navigation("ServiceRibbonItems");

                    b.Navigation("StackIcons");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Modifiers.ProductModifier", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrder", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItem", b =>
                {
                    b.Navigation("SelectedModifiers");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Orders.ShopOrderItemModifier", b =>
                {
                    b.Navigation("SelectedOptions");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProduct", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Localizations");

                    b.Navigation("Modifiers");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.ShopProductCategory", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Shop.Wishes.ShopWishlist", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamGroup", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamMember", b =>
                {
                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam2._0.Models.Team.TeamStructure", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Alfateam2._0.Models.ContentItems.ImageSliderContentItem", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
