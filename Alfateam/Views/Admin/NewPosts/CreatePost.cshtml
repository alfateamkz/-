@using Alfateam.Database.Models
@using Alfateam.Database.Models.NewPosts;
@using Alfateam.ViewModels.Admin;
@using CRMWeb.Helpers.Html;
@{
    Layout = "_AdminLayoutV2";
}
@model NewPostsVM

<!-- Page Heading -->
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            Создание новой новости
        </h1>
    </div>
</div>
<!-- /.row -->

<div class="row">

    <style>
        .flextotal {
            display: flex;
            justify-content: space-between;
            align-items: center;
            align-content: center;
        }

        .removeform {
            font-size: 12px;
            color: #c34551;
            font-weight: 550;
            cursor: pointer;
        }
    </style>

    <div class="col-lg-12">
        <form method="post" asp-action="CreateNewPostPOST" asp-controller="NewPosts" enctype="multipart/form-data" onsubmit="onSubmit(event)" role="form">

            <input type="hidden" asp-for="Id" value="@Model.Id" />

            <div class="form-group">
                <label>Язык новости</label>
                <select class="form-control" asp-for="LanguageId">
                    @Html.Raw(ClassesToHtmlHelper<Language>.Convert(Model.Languages,Model.LanguageId))
                </select>
            </div>

            <div class="newscontent">
                <div class="news mb-3" id="newsContainer">
                   @* <div class="newstitle"></div>
                    <div class="newsdesc"></div>
                    <div class="newsphoto"></div>
                    <div class="newsvideo"></div>
                    <div class="newsslider"></div>*@
                </div>

                @foreach(var item in Model.OrderedItems)
                {
                    if(item is PostHeading heading)
                    {
                        <div class="mb-3">
                            <div class="flextotal">
                                <label class="form-label">Заголовок</label>
                                <span class="removeform">Удалить</span>
                            </div>
                            <input data-order="@item.Order" data-type="heading" type="text" class="form-control" value="@heading.Text" placeholder="Заголовок">
                        </div>
                    }
                    else if(item is PostParagraph paragraph)
                    {
                        <div class="mb-3" data-order="${order}">
                            <div class="flextotal">
                                <label class="form-label">Содержимое</label>
                                <span class="removeform">Удалить</span>
                            </div>
                            <textarea data-order="@item.Order" data-type="paragraph" class="form-control" rows="3">@paragraph.Text</textarea>
                        </div>
                    }
                    else if(item is PostImage img)
                    {
                        <div class="mb-3">
                            <div class="flextotal">
                                <label class="form-label">Загрузить фото</label>
                                <span class="removeform">Удалить</span>
                            </div>
                            <input data-order="@item.Order" name="file@item.Order" data-type="image" class="form-control" type="file" id="loadphoto-${newsPhoto}">
                        </div>
                    }
                    else if(item is PostVideo video)
                    {
                        <div class="mb-3">
                            <div class="flextotal">
                                <label class="form-label">Загрузить видео</label>
                                <span class="removeform">Удалить</span>
                            </div>
                            <input data-order="@item.Order" data-type="video" name="file@item.Order" class="form-control" type="file" id="loadvideo-${newsVideo}">
                        </div>
                    }
                    else if(item is PostSlider slider)
                    {
                        <div class="mb-3">
                        <div class="flextotal">
                            <label class="form-label">Слайдер</label>
                            <span class="removeform">Удалить</span>
                        </div>
                            <input data-order="@item.Order" data-type="slider" name="file@item.Order" class="form-control" type="file" id="loadslider-${newsSlider}" multiple>
                    </div>
                    }
                }

            </div>
            <div class="d-flex justify-content-center">
                <button onclick="addTitle()" type="button" class="btn btn-primary m-1">Добавить заголовок</button>
                <button onclick="addDesc()" type="button" class="btn btn-primary m-1">Добавить описание</button>
                <button onclick="addPhoto()" type="button" class="btn btn-primary m-1">Добавить фото</button>
                <button onclick="addVideo()" type="button" class="btn btn-primary m-1">Добавить видео</button>
                <button onclick="addSlider()" type="button" class="btn btn-primary m-1">Добавить слайдер</button>
            </div>
            <button type="submit" class="btn btn-default">Сохранить изменения</button>
        </form>
    </div>
</div>
<script src="~/media/js/jquery-3.6.0.min.js"></script>
<script src="~/js/main.js"></script>

<script>
    @if (Model.OrderedItems.Any()){
        @("order =" )  @(Model.OrderedItems.Max(o => o.Order) + 1) ;
    }
</script>

<script>
    async function onSubmit(event){
        event.preventDefault();

        let form= event.target;

        let headings = document.querySelectorAll('[data-type="heading"]');
        let paragraphs = document.querySelectorAll('[data-type="paragraph"]');
        let images = document.querySelectorAll('[data-type="image"]');
        let videos = document.querySelectorAll('[data-type="video"]');
        let sliders = document.querySelectorAll('[data-type="slider"]');

        for (let i = 0; i < headings.length; i++) {

            let elem = headings[i];
            let order = new Number(elem.getAttribute('data-order'));

            elem.setAttribute(`name`, `Headings[${i}].Text`);

            createHidden(form, `Headings[${i}].Order`, order);
        }

        for (let i = 0; i < paragraphs.length; i++) {

            let elem = paragraphs[i];
            let order = new Number(elem.getAttribute('data-order'));

            elem.setAttribute(`name`, `Paragraphs[${i}].Text`);
           
            createHidden(form, `Paragraphs[${i}].Order`, order);
        }

        for (let i = 0; i < images.length; i++) {
            let elem = images[i];
            let order = new Number(elem.getAttribute('data-order'));
           
            createHidden(form, `Images[${i}].Order`, order);
            createHidden(form, `Images[${i}].FilesCount`, elem.files.length);
        }

        for (let i = 0; i < videos.length; i++) {
            let elem = videos[i];
            let order = new Number(elem.getAttribute('data-order'));

            createHidden(form, `Videos[${i}].Order`, order);
            createHidden(form, `Videos[${i}].FilesCount`, elem.files.length);
        }

        for (let i = 0; i < sliders.length; i++) {
            let elem = sliders[i];
            let order = new Number(elem.getAttribute('data-order'));

            createHidden(form, `Sliders[${i}].Order`, order);
            createHidden(form, `Sliders[${i}].FilesCount`, elem.files.length);
        }

        event.target.submit();
    }

    function createHidden(form,name,value){
        let hidden = document.createElement('input');
        hidden.setAttribute('type','hidden');
        hidden.setAttribute(`name`, name);
        hidden.value = value;
        form.appendChild(hidden);
    }
</script>