@using Alfateam.Database.Models
@using Alfateam.ViewModels
@using CRMWeb.Helpers.Html
@{
    Layout = "_AdminLayout";
}
@model VMWithLanguages<PortfolioCategory>


<!-- Page Heading -->
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            Редактирование категории портфолио
        </h1>
    </div>
</div>
<!-- /.row -->

<div class="row">
    <div class="col-lg-12">

        <form asp-action="UpdateCategoryPOST" asp-controller="PortfolioCategories" method="post" onsubmit="onSubmit(event)" enctype="multipart/form-data" id="form" role="form">
            <input type="hidden" asp-for="TargetType.Id" value="@Model.TargetType.Id" />


           <div class="form-group">
                <label>Название</label>
                <input class="form-control" asp-for="TargetType.Captions[0].Text" required placeholder="">
            </div>
            <input type="hidden" asp-for="TargetType.Captions[0].Id" value="@Model.TargetType.Captions[0].Id" />
            <input type="hidden" asp-for="TargetType.Captions[0].LanguageId" value="1" />

            <div class="col-lg-12">
                <h4>Переводы на другие языки</h4>
                <button type="button" class="btn btn-primary" onclick="addTitleTranslation()">Добавить перевод</button>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Язык</th>
                                <th>Название</th>
                                <th style="width:80px;"></th>
                            </tr>
                        </thead>
                        <tbody id="titleTranslationsTBody">
                            @for (var i = 1; i < Model.TargetType.Captions.Count; i++)
                            {
                                var translation = Model.TargetType.Captions[i];
                                <tr data-id="@translation.Id">
                                    <input type="hidden" name="TargetType.Captions[@i].Id" value="@translation.Id">
                                    <td>
                                        <select class="form-control" name="TargetType.Captions[@i].LanguageId">
                                            @Html.Raw(ClassesToHtmlHelper<Language>.Convert(Model.Languages,translation.Language))
                                        </select>
                                    </td>
                                    <td><input class="form-control"  name="TargetType.Captions[@i].Text" value="@translation.Text" required placeholder=""></td>
                                    <td><button type="button" onclick="deleteTitleTranslation(event)" class="btn btn-danger">Удалить</button></td>
                                </tr>
                            }
                           
                        </tbody>
                    </table>
                </div>
            </div>


            <button type="submit" class="btn btn-default">Сохранить</button>

        </form>

    </div>
</div>

@*Переводы для заголовка*@
<script>

    let titleTranslationsIndex = @Model.TargetType.Captions.Count-1;
    
    function addTitleTranslation(){

        titleTranslationsIndex++;
        let tBody = document.getElementById("titleTranslationsTBody");

        let tr = document.createElement("tr");
        tr.innerHTML = `<td>
                            <select class="form-control" name="TargetType.Captions[${titleTranslationsIndex}].LanguageId">
                                @Html.Raw(ClassesToHtmlHelper<Language>.Convert(Model.Languages))
                            </select>
                        </td>
                        <td><input class="form-control"  name="TargetType.Captions[${titleTranslationsIndex}].Text" required placeholder=""></td>
                        <td><button type="button" onclick="deleteTitleTranslation(event)" class="btn btn-danger">Удалить</button></td>`;

        tBody.appendChild(tr);

    }

    function deleteTitleTranslation(event) {

         let tBody = document.getElementById("titleTranslationsTBody");
         tBody.removeChild(event.target.parentNode.parentNode);

         titleTranslationsIndex--;
    }

</script>

<script>


 async function onSubmit(event){

     event.preventDefault();

     await setCurrentTranslations('titleTranslationsTBody','/SetCategoryTitleTranslations');

     document.getElementById('form').submit();
  }

  async function setCurrentTranslations(tBodyId,urlRoute){

        let rows = document.getElementById(tBodyId).children;

        let ids = [];

        for(let i=0;i<rows.length;i++){
            let tr = rows[i];

            if (tr.hasAttribute("data-id")) {
                let id = tr.getAttribute("data-id");
                ids.push(new Number(id));
            }
        }

        let data = {
            Ids : ids,
            Id : @Model.TargetType.Id
        }

        await fetch(urlRoute,{
            method : 'POST',
            headers: {
            'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(data)
        });
    }
    

</script>