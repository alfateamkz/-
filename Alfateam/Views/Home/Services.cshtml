@using Alfateam.Helpers
@using Alfateam.Services;
@using Alfateam.ViewModels.Home
@{
    ViewData["Title"] = "Privacy Policy";
}
@model ServicesVM
@inject LocalizationService localization
@{
    var currentLang = localization.GetCurrentLanguage();
    var pageLocalization = localization.GetServicesPageLocalization();
    var mainLocalization = localization.GetMainPageLocalization();
}

@section in_header{
    <!-- CONTENT HEADER -->
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="static-page-header">
                    <div class="title-static">@pageLocalization.Header</div>
                </div>

                <div class="static-content static-cost">
                    <div class="row">


                        @foreach(var service in Model.Promotions)
                        {
                            <div class="col-md-3 mt-3">
                                <div class="element-costs">
                                    <div class="icon-costs">
                                        @switch (service.PromotionPuzzleType)
                                        {
                                            case Alfateam.Database.Enums.PromotionPuzzleType.Puzzle1:
                                                <div class="pazzle-1"></div>
                                                break;
                                            case Alfateam.Database.Enums.PromotionPuzzleType.Puzzle2:
                                                <div class="pazzle-2"></div>
                                                break;
                                            case Alfateam.Database.Enums.PromotionPuzzleType.Puzzle3:
                                                <div class="pazzle-3"></div>
                                                break;
                                            case Alfateam.Database.Enums.PromotionPuzzleType.Puzzle4:
                                                <div class="pazzle-4"></div>
                                                break;
                                        }
                                    </div>
                                    <div class="info-costs">
                                        <div class="name">@service.GetLocalizedCaption(currentLang.Id)</div>
                                        <div class="cost">@service.GetLocalizedPrice(currentLang.Id)</div>
                                    </div>
                                </div>
                            </div>
                        }

                     

               

                    </div>


                    <div class="row">
                        <div class="col-md-3">
                            <div class="cost-desc-opt">
                                @pageLocalization.Col1Text
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="cost-desc-opt">
                                @pageLocalization.Col2Text
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="cost-desc-opt">
                                @pageLocalization.Col3Text
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="cost-desc-opt">
                                @pageLocalization.Col4Text
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- SECTION: Contacts -->
@await Component.InvokeAsync("OrderFormComponent")

<!-- SECTION: Maps -->
@await Component.InvokeAsync("MapBlockComponent")
