// <auto-generated />
using System;
using Alfateam.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alfateam.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230110114338_itemsLocalizations")]
    partial class itemsLocalizations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Alfateam.Database.Models.CallRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("WasCall")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("CallRequests");
                });

            modelBuilder.Entity("Alfateam.Database.Models.General.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IconPath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsShown")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PartnerLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PartnerId");

                    b.ToTable("PartnerLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PortfolioCategoryLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PortfolioCategoryId");

                    b.ToTable("PortfolioCategoryLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PortfolioLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PromotionDescriptionItemLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionDescriptionItemId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PromotionDescriptionItemId");

                    b.ToTable("PromotionDescriptionItemLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PromotionLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.TeammateLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<int?>("TeammateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TeammateId");

                    b.ToTable("TeammateLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.CalculatorLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GetProjectPrice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("MakeOrder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_Crossplatform")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_DesignRequired")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_HasDesign")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_Native")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_TV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_Tablet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileBranch_Watch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProgrammingLanguage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SelectTypeOfService")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoftwareBranch_Design")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoftwareBranch_DesignRequired")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoftwareBranch_HasDesign")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoftwareBranch_Platform")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoftwareBranch_PlatformOther")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Total")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TotalFrom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfService_Mobile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfService_Software1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfService_Software2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfService_Website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_EShop")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_Landing")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_Other")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_ServiceHasContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_ServiceHasPartContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_ServiceTurnkey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_StackCMS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_StackCMSForWebsite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_StackFramework")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteBranch_Website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("CalculatorLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.ErrorPagesLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("NuhuyaDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NuhuyaTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Text403")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Text404")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("ErrorPagesLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.MainPageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adv_01_Terms")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adv_02_Cost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adv_03_Scalability")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adv_04_Support")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText1Mask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText1_Black")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText2Mask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText2_Black")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText4Mask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlfaTeamAgencyText4_Black")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AndGetYourClientsEnd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AndGetYourClientsMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AndGetYourClientsStart")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AndGetYourClientsYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AnswerOnCoupleOfQuestions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AnswerOnCoupleOfQuestionsLine2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AnswerOnCoupleOfQuestionsMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AnswerOnCoupleOfQuestionsYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CalculatorFixed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompaniesThatTrustUs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FixedNavCost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FixedNavMain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FixedNavNews")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FixedNavOurWorks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FixedNavServices")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LeaveOrder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderBtn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderCompanyPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderContactsPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderDescribeTaskPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderMain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderNamePlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MakeOrderYourBudgetPlaceholder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MoreNews")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherAgency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherAgencyText1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherAgencyText2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherAgencyText3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherAgencyText4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurNewsMain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurNewsMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurNewsYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurPartners")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurWorks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurWorksMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OurWorksYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PassPolling")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PolicyTextLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PolicyTextMain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation1Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Presentation1Price")
                        .HasColumnType("int");

                    b.Property<string>("Presentation1PriceMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation1Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation2Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Presentation2Price")
                        .HasColumnType("int");

                    b.Property<string>("Presentation2PriceMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation2Text1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation2Text2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation3Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Presentation3Price")
                        .HasColumnType("int");

                    b.Property<string>("Presentation3PriceMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation3Text1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation3Text2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation4Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Presentation4Price")
                        .HasColumnType("int");

                    b.Property<string>("Presentation4PriceMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation4Text1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation4Text2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation5Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Presentation5Price")
                        .HasColumnType("int");

                    b.Property<string>("Presentation5PriceMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation5Text1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Presentation5Text2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ScrollFixed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StartYourBusiness")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StartYourBusinessMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StartYourBusinessYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WatchAll")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WhyPeopleSelectUs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WhyPeopleSelectUsMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WhyPeopleSelectUsYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_01_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_01_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_02_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_02_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_03_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_03_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_04_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_04_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_05_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_05_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_06_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_06_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_07_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_07_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_08_Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStage_08_Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStagesMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkStagesYellowWord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("MainPageLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.MapBlockLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("MapContacts")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapOffice1Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapOffice2Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapOurAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapOurEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapOurPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MapRequestCall")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("MapBlockLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.NewsPageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("NewsPageLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.PortfolioPageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AllCategories")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("PortfolioPageLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.PrivacyPageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("PrivacyPageLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.ServicesPageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Col1Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Col2Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Col3Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Col4Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("ServicesPageLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.AcceptOrderPopupLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Close")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("AcceptOrderPopupLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.CallPopupLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyTextLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PolicyTextMain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Send")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("CallPopupLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.ContactsPopupLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CallUs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("RequestCall")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Send")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ToMail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ToTelegram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ToWhatsApp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("ContactsPopupLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.PortfolioPopupLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedAt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddedAtDateMask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Close")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GoToSite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("PortfolioPopupLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.SharedLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FooterCosts")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FooterLegalInfoKZ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FooterLegalInfoRF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FooterNews")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FooterOurWorks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FooterPrivacyPolicy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("MakeOrder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("SharedLocalizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.NewPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("Watches")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("NewPosts");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostHeading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("NewPostId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NewPostId");

                    b.ToTable("PostHeadings");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("NewPostId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PostSliderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewPostId");

                    b.HasIndex("PostSliderId");

                    b.ToTable("PostImages");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostParagraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("NewPostId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NewPostId");

                    b.ToTable("PostParagraphs");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostSlider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("NewPostId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewPostId");

                    b.ToTable("PostSliders");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("NewPostId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewPostId");

                    b.ToTable("PostVideos");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Budget")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgPath")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("Alfateam.Database.Models.PortfolioCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PortfolioCategories");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Portfolios.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Portfolios.PortfolioImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .HasColumnType("longtext");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioImages");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgPath")
                        .HasColumnType("longtext");

                    b.Property<int>("Watches")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Promotions.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<string>("RightImgPath")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Promotions.PromotionDescriptionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionDescriptionItems");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SiteFrontend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ErrorPagesId")
                        .HasColumnType("int");

                    b.Property<int>("GeneralTextsId")
                        .HasColumnType("int");

                    b.Property<int>("LandingTextsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ErrorPagesId");

                    b.HasIndex("GeneralTextsId");

                    b.HasIndex("LandingTextsId");

                    b.ToTable("SiteFrontends");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SitePagesTexts.ErrorPages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ErrorPages");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralTexts");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SitePagesTexts.LandingTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LandingTexts");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Teammate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teammates");
                });

            modelBuilder.Entity("Alfateam.Database.Models.TranslationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ErrorPagesId")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorPagesId1")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorPagesId2")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorPagesId3")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId1")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId10")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId11")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId12")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId13")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId14")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId15")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId16")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId2")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId3")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId4")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId5")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId6")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId7")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId8")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTextsId9")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId1")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId10")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId11")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId12")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId13")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId14")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId15")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId16")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId17")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId18")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId19")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId2")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId20")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId21")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId3")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId4")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId5")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId6")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId7")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId8")
                        .HasColumnType("int");

                    b.Property<int?>("LandingTextsId9")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId1")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioId1")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("PostId1")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionDescriptionItemId")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionId1")
                        .HasColumnType("int");

                    b.Property<int?>("TeammateId")
                        .HasColumnType("int");

                    b.Property<int?>("TeammateId1")
                        .HasColumnType("int");

                    b.Property<int?>("TeammateId2")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ErrorPagesId");

                    b.HasIndex("ErrorPagesId1");

                    b.HasIndex("ErrorPagesId2");

                    b.HasIndex("ErrorPagesId3");

                    b.HasIndex("GeneralTextsId");

                    b.HasIndex("GeneralTextsId1");

                    b.HasIndex("GeneralTextsId10");

                    b.HasIndex("GeneralTextsId11");

                    b.HasIndex("GeneralTextsId12");

                    b.HasIndex("GeneralTextsId13");

                    b.HasIndex("GeneralTextsId14");

                    b.HasIndex("GeneralTextsId15");

                    b.HasIndex("GeneralTextsId16");

                    b.HasIndex("GeneralTextsId2");

                    b.HasIndex("GeneralTextsId3");

                    b.HasIndex("GeneralTextsId4");

                    b.HasIndex("GeneralTextsId5");

                    b.HasIndex("GeneralTextsId6");

                    b.HasIndex("GeneralTextsId7");

                    b.HasIndex("GeneralTextsId8");

                    b.HasIndex("GeneralTextsId9");

                    b.HasIndex("LandingTextsId");

                    b.HasIndex("LandingTextsId1");

                    b.HasIndex("LandingTextsId10");

                    b.HasIndex("LandingTextsId11");

                    b.HasIndex("LandingTextsId12");

                    b.HasIndex("LandingTextsId13");

                    b.HasIndex("LandingTextsId14");

                    b.HasIndex("LandingTextsId15");

                    b.HasIndex("LandingTextsId16");

                    b.HasIndex("LandingTextsId17");

                    b.HasIndex("LandingTextsId18");

                    b.HasIndex("LandingTextsId19");

                    b.HasIndex("LandingTextsId2");

                    b.HasIndex("LandingTextsId20");

                    b.HasIndex("LandingTextsId21");

                    b.HasIndex("LandingTextsId3");

                    b.HasIndex("LandingTextsId4");

                    b.HasIndex("LandingTextsId5");

                    b.HasIndex("LandingTextsId6");

                    b.HasIndex("LandingTextsId7");

                    b.HasIndex("LandingTextsId8");

                    b.HasIndex("LandingTextsId9");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("PartnerId1");

                    b.HasIndex("PortfolioCategoryId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("PortfolioId1");

                    b.HasIndex("PostId");

                    b.HasIndex("PostId1");

                    b.HasIndex("PromotionDescriptionItemId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("PromotionId1");

                    b.HasIndex("TeammateId");

                    b.HasIndex("TeammateId1");

                    b.HasIndex("TeammateId2");

                    b.ToTable("TranslationItems");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PartnerLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.Partner", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PartnerId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PortfolioCategoryLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.PortfolioCategory", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PortfolioCategoryId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PortfolioLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.Portfolios.Portfolio", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PortfolioId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PromotionDescriptionItemLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.Promotions.PromotionDescriptionItem", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PromotionDescriptionItemId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.PromotionLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.Promotions.Promotion", null)
                        .WithMany("Localizations")
                        .HasForeignKey("PromotionId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.TeammateLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.Teammate", null)
                        .WithMany("Localizations")
                        .HasForeignKey("TeammateId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.CalculatorLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.ErrorPagesLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.MainPageLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.MapBlockLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.NewsPageLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.PortfolioPageLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.PrivacyPageLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.OtherPages.ServicesPageLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.AcceptOrderPopupLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.CallPopupLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.ContactsPopupLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.Popups.PortfolioPopupLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Localizations.Texts.SharedLocalization", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.NewPost", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostHeading", b =>
                {
                    b.HasOne("Alfateam.Database.Models.NewPosts.NewPost", null)
                        .WithMany("Headings")
                        .HasForeignKey("NewPostId");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostImage", b =>
                {
                    b.HasOne("Alfateam.Database.Models.NewPosts.NewPost", null)
                        .WithMany("Images")
                        .HasForeignKey("NewPostId");

                    b.HasOne("Alfateam.Database.Models.NewPosts.PostSlider", null)
                        .WithMany("Images")
                        .HasForeignKey("PostSliderId");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostParagraph", b =>
                {
                    b.HasOne("Alfateam.Database.Models.NewPosts.NewPost", null)
                        .WithMany("Paragraphs")
                        .HasForeignKey("NewPostId");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostSlider", b =>
                {
                    b.HasOne("Alfateam.Database.Models.NewPosts.NewPost", null)
                        .WithMany("Sliders")
                        .HasForeignKey("NewPostId");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostVideo", b =>
                {
                    b.HasOne("Alfateam.Database.Models.NewPosts.NewPost", null)
                        .WithMany("Videos")
                        .HasForeignKey("NewPostId");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Portfolios.Portfolio", b =>
                {
                    b.HasOne("Alfateam.Database.Models.PortfolioCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Portfolios.PortfolioImage", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Portfolios.Portfolio", null)
                        .WithMany("Images")
                        .HasForeignKey("PortfolioId");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Promotions.PromotionDescriptionItem", b =>
                {
                    b.HasOne("Alfateam.Database.Models.Promotions.Promotion", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("PromotionId");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SiteFrontend", b =>
                {
                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.ErrorPages", "ErrorPages")
                        .WithMany()
                        .HasForeignKey("ErrorPagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", "GeneralTexts")
                        .WithMany()
                        .HasForeignKey("GeneralTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", "LandingTexts")
                        .WithMany()
                        .HasForeignKey("LandingTextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ErrorPages");

                    b.Navigation("GeneralTexts");

                    b.Navigation("LandingTexts");
                });

            modelBuilder.Entity("Alfateam.Database.Models.TranslationItem", b =>
                {
                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.ErrorPages", null)
                        .WithMany("Texts403")
                        .HasForeignKey("ErrorPagesId");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.ErrorPages", null)
                        .WithMany("Texts404")
                        .HasForeignKey("ErrorPagesId1");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.ErrorPages", null)
                        .WithMany("TextsNuhuyaDescription")
                        .HasForeignKey("ErrorPagesId2");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.ErrorPages", null)
                        .WithMany("TextsNuhuyaTitle")
                        .HasForeignKey("ErrorPagesId3");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("AddedAt")
                        .HasForeignKey("GeneralTextsId");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("AllPortfolios")
                        .HasForeignKey("GeneralTextsId1");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("OurWorks")
                        .HasForeignKey("GeneralTextsId10");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Partners")
                        .HasForeignKey("GeneralTextsId11");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("PublishedAt")
                        .HasForeignKey("GeneralTextsId12");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("ServicesPrice")
                        .HasForeignKey("GeneralTextsId13");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("SocialNetworks")
                        .HasForeignKey("GeneralTextsId14");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Team")
                        .HasForeignKey("GeneralTextsId15");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Watches")
                        .HasForeignKey("GeneralTextsId16");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("AllRightsReserved")
                        .HasForeignKey("GeneralTextsId2");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Categories")
                        .HasForeignKey("GeneralTextsId3");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Close")
                        .HasForeignKey("GeneralTextsId4");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Contacts")
                        .HasForeignKey("GeneralTextsId5");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Main")
                        .HasForeignKey("GeneralTextsId6");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("Navigation")
                        .HasForeignKey("GeneralTextsId7");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("NewPortfolioLabel")
                        .HasForeignKey("GeneralTextsId8");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", null)
                        .WithMany("News")
                        .HasForeignKey("GeneralTextsId9");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("CompanyName")
                        .HasForeignKey("LandingTextsId");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("Contacts")
                        .HasForeignKey("LandingTextsId1");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("NewsMore")
                        .HasForeignKey("LandingTextsId10");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("Order")
                        .HasForeignKey("LandingTextsId11");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("OrderCompleted")
                        .HasForeignKey("LandingTextsId12");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("OrderNow")
                        .HasForeignKey("LandingTextsId13");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("OurLastPortfolios")
                        .HasForeignKey("LandingTextsId14");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("OurPortfolios")
                        .HasForeignKey("LandingTextsId15");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("Send")
                        .HasForeignKey("LandingTextsId16");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("StartBusiness")
                        .HasForeignKey("LandingTextsId17");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("StartBusinessDescriptions")
                        .HasForeignKey("LandingTextsId18");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("WeAcceptPayments")
                        .HasForeignKey("LandingTextsId19");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("ContactsPlaceholder")
                        .HasForeignKey("LandingTextsId2");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("YourBudget")
                        .HasForeignKey("LandingTextsId20");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("YourName")
                        .HasForeignKey("LandingTextsId21");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("DescribeJob")
                        .HasForeignKey("LandingTextsId3");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("DescribeJobPlaceholder")
                        .HasForeignKey("LandingTextsId4");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("DiscoverNews")
                        .HasForeignKey("LandingTextsId5");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("MakeOrder")
                        .HasForeignKey("LandingTextsId6");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("MorePortfolios")
                        .HasForeignKey("LandingTextsId7");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("News")
                        .HasForeignKey("LandingTextsId8");

                    b.HasOne("Alfateam.Database.Models.SitePagesTexts.LandingTexts", null)
                        .WithMany("NewsDetails")
                        .HasForeignKey("LandingTextsId9");

                    b.HasOne("Alfateam.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfateam.Database.Models.Partner", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("PartnerId");

                    b.HasOne("Alfateam.Database.Models.Partner", null)
                        .WithMany("Titles")
                        .HasForeignKey("PartnerId1");

                    b.HasOne("Alfateam.Database.Models.PortfolioCategory", null)
                        .WithMany("Captions")
                        .HasForeignKey("PortfolioCategoryId");

                    b.HasOne("Alfateam.Database.Models.Portfolios.Portfolio", null)
                        .WithMany("Captions")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Alfateam.Database.Models.Portfolios.Portfolio", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("PortfolioId1");

                    b.HasOne("Alfateam.Database.Models.Post", null)
                        .WithMany("Captions")
                        .HasForeignKey("PostId");

                    b.HasOne("Alfateam.Database.Models.Post", null)
                        .WithMany("Contents")
                        .HasForeignKey("PostId1");

                    b.HasOne("Alfateam.Database.Models.Promotions.PromotionDescriptionItem", null)
                        .WithMany("Texts")
                        .HasForeignKey("PromotionDescriptionItemId");

                    b.HasOne("Alfateam.Database.Models.Promotions.Promotion", null)
                        .WithMany("Captions")
                        .HasForeignKey("PromotionId");

                    b.HasOne("Alfateam.Database.Models.Promotions.Promotion", null)
                        .WithMany("Prices")
                        .HasForeignKey("PromotionId1");

                    b.HasOne("Alfateam.Database.Models.Teammate", null)
                        .WithMany("MiddleDescriptions")
                        .HasForeignKey("TeammateId");

                    b.HasOne("Alfateam.Database.Models.Teammate", null)
                        .WithMany("Positions")
                        .HasForeignKey("TeammateId1");

                    b.HasOne("Alfateam.Database.Models.Teammate", null)
                        .WithMany("Titles")
                        .HasForeignKey("TeammateId2");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.NewPost", b =>
                {
                    b.Navigation("Headings");

                    b.Navigation("Images");

                    b.Navigation("Paragraphs");

                    b.Navigation("Sliders");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("Alfateam.Database.Models.NewPosts.PostSlider", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Partner", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Localizations");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Alfateam.Database.Models.PortfolioCategory", b =>
                {
                    b.Navigation("Captions");

                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Portfolios.Portfolio", b =>
                {
                    b.Navigation("Captions");

                    b.Navigation("Descriptions");

                    b.Navigation("Images");

                    b.Navigation("Localizations");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Post", b =>
                {
                    b.Navigation("Captions");

                    b.Navigation("Contents");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Promotions.Promotion", b =>
                {
                    b.Navigation("Captions");

                    b.Navigation("Descriptions");

                    b.Navigation("Localizations");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Promotions.PromotionDescriptionItem", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Texts");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SitePagesTexts.ErrorPages", b =>
                {
                    b.Navigation("Texts403");

                    b.Navigation("Texts404");

                    b.Navigation("TextsNuhuyaDescription");

                    b.Navigation("TextsNuhuyaTitle");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SitePagesTexts.GeneralTexts", b =>
                {
                    b.Navigation("AddedAt");

                    b.Navigation("AllPortfolios");

                    b.Navigation("AllRightsReserved");

                    b.Navigation("Categories");

                    b.Navigation("Close");

                    b.Navigation("Contacts");

                    b.Navigation("Main");

                    b.Navigation("Navigation");

                    b.Navigation("NewPortfolioLabel");

                    b.Navigation("News");

                    b.Navigation("OurWorks");

                    b.Navigation("Partners");

                    b.Navigation("PublishedAt");

                    b.Navigation("ServicesPrice");

                    b.Navigation("SocialNetworks");

                    b.Navigation("Team");

                    b.Navigation("Watches");
                });

            modelBuilder.Entity("Alfateam.Database.Models.SitePagesTexts.LandingTexts", b =>
                {
                    b.Navigation("CompanyName");

                    b.Navigation("Contacts");

                    b.Navigation("ContactsPlaceholder");

                    b.Navigation("DescribeJob");

                    b.Navigation("DescribeJobPlaceholder");

                    b.Navigation("DiscoverNews");

                    b.Navigation("MakeOrder");

                    b.Navigation("MorePortfolios");

                    b.Navigation("News");

                    b.Navigation("NewsDetails");

                    b.Navigation("NewsMore");

                    b.Navigation("Order");

                    b.Navigation("OrderCompleted");

                    b.Navigation("OrderNow");

                    b.Navigation("OurLastPortfolios");

                    b.Navigation("OurPortfolios");

                    b.Navigation("Send");

                    b.Navigation("StartBusiness");

                    b.Navigation("StartBusinessDescriptions");

                    b.Navigation("WeAcceptPayments");

                    b.Navigation("YourBudget");

                    b.Navigation("YourName");
                });

            modelBuilder.Entity("Alfateam.Database.Models.Teammate", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("MiddleDescriptions");

                    b.Navigation("Positions");

                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
