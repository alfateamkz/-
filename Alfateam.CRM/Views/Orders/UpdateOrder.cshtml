@using Alfateam.CRM.ViewModels.Orders;
@using Alfateam.CRM.ViewModels.Sales;
@using Alfateam.Database.Enums.CRM.Staff;
@using Alfateam.Database.Enums.CRM;
@using Alfateam.Database.Models.CRM.Sales;
@using CRMWeb.Helpers;
@using CRMWeb.Helpers.Html;
@using MarkupCreator.Helpers.Converters;
@{
    Layout = "_AdminLayoutV2";
}
@model OrderPageVM

<!-- Page Heading -->
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            Редактирование заказа
        </h1>
    </div>
</div>
<!-- /.row -->

<div class="row">
    <div class="col-lg-12">

        <form asp-action="UpdateOrderPOST" asp-controller="Orders" method="post" enctype="multipart/form-data" role="form">
            
            <input type="hidden" asp-for="Order.Id" />
             <input type="hidden" asp-for="Order.TSPath" />

            <div class="form-group">
                <label>Название заказа*</label>
                <input class="form-control" asp-for="Order.Title" required placeholder="">
            </div>

            <div class="form-group">
                <label>Стоимость*</label>
                <input type="number" class="form-control" asp-for="Order.Price" required placeholder="">
            </div>

            <div class="form-group">
                <label>Дата старта*</label>
                <input type="date" class="form-control" asp-for="Order.StartDate" required placeholder="">
            </div>

            <div class="form-group">
                <label>Дедлайн*</label>
                <input type="date" class="form-control" asp-for="Order.Deadline" required placeholder="">
            </div>

            <div class="form-group">
                <label>Статус заказа</label>
                <select class="form-control" asp-for="Order.Status">
                    @Html.Raw(EnumToHtmlHelper<OrderStatus>.Convert(Model.Order.Status))
                </select>
            </div>

            <div class="form-group">
                <label>Клиент</label>
                <select class="form-control" asp-for="Order.ClientId">
                    <option>Не выбран</option>
                    @Html.Raw(ClassesToHtmlHelper<Client>.Convert(Model.Clients,Model.Order.ClientId))
                </select>
            </div>

            <div class="form-group">
                <label>Описание*</label>
                <textarea class="form-control" asp-for="Order.Description" rows="3"></textarea>
            </div>

            <div class="form-group">
                <label>Техническое задание (при наличии)</label>
                <input type="file" class="form-control" name="ts" placeholder="">
            </div>

             <div class="table-responsive mt-4">
                  <label>Этапы заказа</label>
                    <table class="table table-hover" id="tablemanager">
                        <thead class="tableheader">
                            <tr>
                                <th>Название</th>
                                <th>Стоимость</th>
                                <th>Дата старта</th>
                                <th>Дедлайн</th>
                                <th>Статус</th>
                                <th>
                                    <button type="button" onclick="addOrderStage()" style="background: transparent"><i class="fa-solid fa-plus"></i></button>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="stagesTable">

                            @foreach (var item in Model.Order.Stages) {

                                <tr data-id="@item.Id">
                                    <td>@item.Title</td>
                                    <td>@item.Price</td>
                                    <td>@item.StartDate.ToString("dd.MM.yyyy")</td>
                                    <td>@item.Deadline.ToString("dd.MM.yyyy")</td>
                                    <td>@EnumDescriptionHelper.GetDescription(item.Status)</td>
                                    <td>
                                        <div class="interect">
                                            <a asp-action="UpdateOrderStage" asp-controller="Orders" asp-route-id="@item.Id" class="edit"><i class="fa-solid fa-eye"></i></a>
                                            <button type="button" onclick="deleteOrderStage(@item.Id)" style="background: transparent" class="edit"><i class="fa-sharp fa-solid fa-trash"></i></button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            <div class="table-responsive mt-4">
                <label>Бюджет на расходы</label>
                <table class="table table-hover" id="tablemanager">
                    <thead class="tableheader">
                        <tr>
                            <th>Название</th>
                            <th>Описание</th>
                            <th>Сумма</th>
                            <th>
                                <button type="button" onclick="addOrderBudgetItem()" style="background: transparent"><i class="fa-solid fa-plus"></i></button>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="budgetTable">

                        @foreach (var item in Model.Order.BudgetItems) {

                            <tr data-id="@item.Id">
                                <td>@item.Title</td>
                                <td>@item.Description</td>
                                <td>@item.Sum</td>
                                <td>
                                    <div class="interect">
                                        <button type="button" onclick="setUpdateOrderBudgetItemModalId(@item.Id)" data-bs-toggle="modal" data-bs-target="#editOrderBudgetModal" style="background: transparent" class="edit"><i class="fa-sharp fa-solid fa-eye"></i></button>
                                        <button type="button" onclick="deleteOrderBudgetItem(@item.Id)" class="edit"><i class="fa-solid fa-trash"></i></button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="mb-3 mt-3 position-right">
                <button type="submit" class="button-classic">Сохранить</button>
            </div>

        </form>


        <!-- Редактирование статьи бюджета для заказа -->
        <div class="modal fade" id="editOrderBudgetModal" data-id="0" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Редактирование статьи бюджета для заказа</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        
                        <div class="form-group">
                            <label>Название*</label>
                            <input id="editOrderBudget_title" class="form-control" required placeholder="">
                        </div>

                        <div class="form-group">
                            <label>Сумма*</label>
                            <input id="editOrderBudget_sum" type="number" class="form-control" required placeholder="">
                        </div>

                        <div class="form-group">
                            <label>Описание</label>
                            <textarea id="editOrderBudget_description" class="form-control" rows="3"></textarea>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                        <button type="button" onclick="updateOrderBudgetItem()" data-bs-dismiss="modal" class="btn btn-primary">Сохранить изменения</button>
                    </div>
                </div>
            </div>
        </div>


        <script>

            async function addOrderStage(){
                await fetch(document.location.origin + `/AddOrderStage?orderId=@Model.Order.Id`)
                    .then((response) => {
                        return response.json();
                    })
                    .then((data) => {
                        console.log(data);

                        let row = document.createElement('tr');
                        row.setAttribute('data-id',data.id);

                        row.innerHTML = `<td>${data.title}</td>
                                         <td>${data.price}</td>
                                         <td>${new Date(data.startDate).toLocaleDateString('en-GB')}</td>
                                         <td>${new Date(data.deadline).toLocaleDateString('en-GB')}</td>
                                         <td>Не начато</td>
                                         <td>
                                             <div class="interect">
                                                 <a class="edit"><i class="fa-solid fa-eye"></i></a>
                                                 <button type="button" onclick="deleteOrderStage(${data.id})"  style="background: transparent" class="edit"><i class="fa-sharp fa-solid fa-trash"></i></button>
                                             </div>
                                         </td>`;
                        document.getElementById('stagesTable').appendChild(row);

                    });
            }

            async function deleteOrderStage(id) {

                let table = document.getElementById('stagesTable');

                let row = table.querySelector(`[data-id='${id}']`);
                table.removeChild(row);

                await fetch(document.location.origin + `/DeleteOrderStage?stageId=${id}`, {
                    method: 'DELETE',
                });

            }
           


        </script>

        <script>

            async function addOrderBudgetItem() {
                await fetch(document.location.origin + `/AddOrderBudgetItem?orderId=@Model.Order.Id`)
                    .then((response) => {
                        return response.json();
                    })
                    .then((data) => {
                        console.log(data);

                        let row = document.createElement('tr');
                        row.setAttribute('data-id', data.id);

                        row.innerHTML = `<td>${data.title}</td>
                                         <td>${data.description}</td>
                                         <td>${data.sum}</td>
                                         <td>
                                             <div class="interect">
                                                 <button type="button" onclick="setUpdateOrderBudgetItemModalId(${data.id})" data-bs-toggle="modal" data-bs-target="#editOrderBudgetModal" style="background: transparent" class="edit"><i class="fa-sharp fa-solid fa-eye"></i></button>
                                                 <button type="button" onclick="deleteOrderBudgetItem(${data.id})" style="background: transparent" class="edit"><i class="fa-sharp fa-solid fa-trash"></i></button>
                                             </div>
                                         </td>`;
                        document.getElementById('budgetTable').appendChild(row);

                    });
            }

            async function deleteOrderBudgetItem(id) {

                let table = document.getElementById('budgetTable');

                let row = table.querySelector(`[data-id='${id}']`);
                table.removeChild(row);

                await fetch(document.location.origin + `/DeleteOrderBudgetItem?budgetItemId=${id}`, {
                    method: 'DELETE'
                });

            }

            async function setUpdateOrderBudgetItemModalId(id){
                document.getElementById('editOrderBudgetModal').setAttribute('data-id',id);

                await fetch(document.location.origin + `/GetOrderBudgetItem?budgetItemId=${id}`)
                    .then((response) => {
                        return response.json();
                    })
                    .then((data) => {
                        console.log(data);

                        document.getElementById('editOrderBudget_title').value = data.title;
                        document.getElementById('editOrderBudget_sum').value = data.sum;
                        document.getElementById('editOrderBudget_description').value = data.description;

                    });
            }

            async function updateOrderBudgetItem(){

                let item = {
                    Id: new Number(document.getElementById('editOrderBudgetModal').getAttribute('data-id')),
                    Title: document.getElementById('editOrderBudget_title').value,
                    Sum: new Number(document.getElementById('editOrderBudget_sum').value),
                    Description: document.getElementById('editOrderBudget_description').value,
                };

                console.log(item);

                await fetch(document.location.origin + `/EditOrderBudgetItem`, {
                    method: 'POST',
                    body: JSON.stringify(item),
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });

                let table = document.getElementById('budgetTable');
                let row = table.querySelector(`[data-id='${item.Id}']`);
                row.innerHTML = `<td>${item.Title}</td>
                                 <td>${item.Description}</td>
                                 <td>${item.Sum}</td>
                                 <td>
                                     <div class="interect">
                                         <button type="button" onclick="setUpdateOrderBudgetItemModalId(${item.Id})" data-bs-toggle="modal" data-bs-target="#editOrderBudgetModal" style="background: transparent" class="edit"><i class="fa-sharp fa-solid fa-eye"></i></button>
                                         <button type="button" onclick="deleteOrderBudgetItem(${item.Id})" style="background: transparent" class="edit"><i class="fa-sharp fa-solid fa-trash"></i></button>
                                     </div>
                                 </td>`;
            }

        </script>
       

    </div>
</div>

